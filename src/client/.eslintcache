[{"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx":"1","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts":"2","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts":"3","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts":"4","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\reducers.ts":"5","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts":"6","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\aspectReducer.tsx":"7","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\inspectorReducer.tsx":"8","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\types.ts":"9","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts":"10","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts":"11","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts":"12","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\index.ts":"13","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts":"14","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts":"15","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts":"16","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts":"17","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts":"18","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts":"19","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts":"20","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts":"21","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\nodetype\\saga.ts":"22","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts":"23","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js":"24","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js":"25","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js":"26","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\Footer.tsx":"27","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx":"28","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx":"29","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx":"30","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx":"31","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx":"32","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx":"33","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx":"34","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectInfo.tsx":"35","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx":"36","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx":"37","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectDropdown.tsx":"38","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx":"39","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx":"40","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx":"41","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts":"42","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\actions.ts":"43","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts":"44","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx":"45","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\getAspect.tsx":"46","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DrawMiniMap.tsx":"47","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx":"48","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx":"49","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts":"50","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts":"51","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts":"52","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts":"53","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx":"54","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx":"55","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx":"56","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts":"57","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts":"58","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorContent.tsx":"59","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorComponent.tsx":"60","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts":"61","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\index.ts":"62","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx":"63","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx":"64","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx":"65","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedToggleButton.tsx":"66","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx":"67","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts":"68","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts":"69","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts":"70","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\changeInspector.tsx":"71","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledHeader.ts":"72","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledToggleButton.tsx":"73","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx":"74","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx":"75","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx":"76","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx":"77","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledInspectorContent.tsx":"78","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\index.ts":"79","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\ExplorerComponent.tsx":"80","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\helpers\\GetProjectData.tsx":"81","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\index.ts":"82","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectComponent.tsx":"83","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facilityComponent\\FacilityComponent.tsx":"84","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\checkboxComponent\\CheckboxComponent.tsx":"85","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts":"86","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\aspectComponent\\AspectComponent.tsx":"87","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facetComponent\\FacetComponent.tsx":"88"},{"size":511,"mtime":1615885153948,"results":"89","hashOfConfig":"90"},{"size":1059,"mtime":1615967495687,"results":"91","hashOfConfig":"90"},{"size":414,"mtime":1614089009433,"results":"92","hashOfConfig":"90"},{"size":747,"mtime":1615885154005,"results":"93","hashOfConfig":"90"},{"size":746,"mtime":1615885153990,"results":"94","hashOfConfig":"90"},{"size":824,"mtime":1615885153992,"results":"95","hashOfConfig":"90"},{"size":494,"mtime":1615885154015,"results":"96","hashOfConfig":"90"},{"size":900,"mtime":1616079455205,"results":"97","hashOfConfig":"90"},{"size":752,"mtime":1615885153990,"results":"98","hashOfConfig":"90"},{"size":716,"mtime":1615885154014,"results":"99","hashOfConfig":"90"},{"size":692,"mtime":1615885154004,"results":"100","hashOfConfig":"90"},{"size":578,"mtime":1615885153950,"results":"101","hashOfConfig":"90"},{"size":60,"mtime":1613394219318,"results":"102","hashOfConfig":"90"},{"size":56,"mtime":1615885153787,"results":"103","hashOfConfig":"90"},{"size":131,"mtime":1613394219322,"results":"104","hashOfConfig":"90"},{"size":63,"mtime":1613394219319,"results":"105","hashOfConfig":"90"},{"size":58,"mtime":1613394219320,"results":"106","hashOfConfig":"90"},{"size":347,"mtime":1615885153891,"results":"107","hashOfConfig":"90"},{"size":73,"mtime":1613556215764,"results":"108","hashOfConfig":"90"},{"size":215,"mtime":1615885153808,"results":"109","hashOfConfig":"90"},{"size":1409,"mtime":1615885153981,"results":"110","hashOfConfig":"90"},{"size":1009,"mtime":1615885153959,"results":"111","hashOfConfig":"90"},{"size":1136,"mtime":1615885153971,"results":"112","hashOfConfig":"90"},{"size":330,"mtime":1615885153929,"results":"113","hashOfConfig":"90"},{"size":723,"mtime":1615885153930,"results":"114","hashOfConfig":"90"},{"size":7917,"mtime":1615885153940,"results":"115","hashOfConfig":"90"},{"size":639,"mtime":1615885153812,"results":"116","hashOfConfig":"90"},{"size":2500,"mtime":1616700808950,"results":"117","hashOfConfig":"90"},{"size":476,"mtime":1615885153830,"results":"118","hashOfConfig":"90"},{"size":333,"mtime":1615967495551,"results":"119","hashOfConfig":"90"},{"size":983,"mtime":1615885153836,"results":"120","hashOfConfig":"90"},{"size":683,"mtime":1615967495650,"results":"121","hashOfConfig":"90"},{"size":1235,"mtime":1615885153859,"results":"122","hashOfConfig":"90"},{"size":187,"mtime":1615885153869,"results":"123","hashOfConfig":"90"},{"size":513,"mtime":1616683496884,"results":"124","hashOfConfig":"90"},{"size":572,"mtime":1615885153799,"results":"125","hashOfConfig":"90"},{"size":1392,"mtime":1615885153818,"results":"126","hashOfConfig":"90"},{"size":1385,"mtime":1615885153848,"results":"127","hashOfConfig":"90"},{"size":3247,"mtime":1615885153800,"results":"128","hashOfConfig":"90"},{"size":354,"mtime":1615885153842,"results":"129","hashOfConfig":"90"},{"size":516,"mtime":1615885153792,"results":"130","hashOfConfig":"90"},{"size":11954,"mtime":1615885154026,"results":"131","hashOfConfig":"90"},{"size":342,"mtime":1615885153990,"results":"132","hashOfConfig":"90"},{"size":342,"mtime":1615885154005,"results":"133","hashOfConfig":"90"},{"size":775,"mtime":1616079455205,"results":"134","hashOfConfig":"90"},{"size":278,"mtime":1615885154015,"results":"135","hashOfConfig":"90"},{"size":648,"mtime":1615885153801,"results":"136","hashOfConfig":"90"},{"size":528,"mtime":1615885153809,"results":"137","hashOfConfig":"90"},{"size":888,"mtime":1615885153810,"results":"138","hashOfConfig":"90"},{"size":56,"mtime":1615885154016,"results":"139","hashOfConfig":"90"},{"size":24,"mtime":1615283784597,"results":"140","hashOfConfig":"90"},{"size":26,"mtime":1615384427396,"results":"141","hashOfConfig":"90"},{"size":138,"mtime":1615889046644,"results":"142","hashOfConfig":"90"},{"size":646,"mtime":1615885153810,"results":"143","hashOfConfig":"90"},{"size":673,"mtime":1615885153809,"results":"144","hashOfConfig":"90"},{"size":614,"mtime":1615885153811,"results":"145","hashOfConfig":"90"},{"size":284,"mtime":1615885153949,"results":"146","hashOfConfig":"90"},{"size":2558,"mtime":1615885153948,"results":"147","hashOfConfig":"90"},{"size":345,"mtime":1616079455199,"results":"148","hashOfConfig":"90"},{"size":980,"mtime":1616061395499,"results":"149","hashOfConfig":"90"},{"size":124,"mtime":1616079455201,"results":"150","hashOfConfig":"90"},{"size":134,"mtime":1616061395561,"results":"151","hashOfConfig":"90"},{"size":193,"mtime":1616079455199,"results":"152","hashOfConfig":"90"},{"size":1495,"mtime":1616079455199,"results":"153","hashOfConfig":"90"},{"size":413,"mtime":1616061395545,"results":"154","hashOfConfig":"90"},{"size":417,"mtime":1616061395553,"results":"155","hashOfConfig":"90"},{"size":613,"mtime":1616079455203,"results":"156","hashOfConfig":"90"},{"size":179,"mtime":1616079455201,"results":"157","hashOfConfig":"90"},{"size":138,"mtime":1616079455203,"results":"158","hashOfConfig":"90"},{"size":154,"mtime":1615979894473,"results":"159","hashOfConfig":"90"},{"size":397,"mtime":1616079455205,"results":"160","hashOfConfig":"90"},{"size":641,"mtime":1616079455202,"results":"161","hashOfConfig":"90"},{"size":628,"mtime":1616079455204,"results":"162","hashOfConfig":"90"},{"size":332,"mtime":1616061395527,"results":"163","hashOfConfig":"90"},{"size":2988,"mtime":1616079455200,"results":"164","hashOfConfig":"90"},{"size":477,"mtime":1616079455201,"results":"165","hashOfConfig":"90"},{"size":297,"mtime":1616079455200,"results":"166","hashOfConfig":"90"},{"size":434,"mtime":1616079455202,"results":"167","hashOfConfig":"90"},{"size":96,"mtime":1616421578276,"results":"168","hashOfConfig":"90"},{"size":914,"mtime":1616700808974,"results":"169","hashOfConfig":"90"},{"size":860,"mtime":1616696506956,"results":"170","hashOfConfig":"90"},{"size":70,"mtime":1614256942798,"results":"171","hashOfConfig":"90"},{"size":627,"mtime":1615885153875,"results":"172","hashOfConfig":"90"},{"size":951,"mtime":1616700755282,"results":"173","hashOfConfig":"90"},{"size":730,"mtime":1616701425869,"results":"174","hashOfConfig":"90"},{"size":210,"mtime":1616698013765,"results":"175","hashOfConfig":"90"},{"size":1071,"mtime":1616702414527,"results":"176","hashOfConfig":"90"},{"size":403,"mtime":1616702327258,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"vqt1f2",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"180"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"180"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"180"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"180"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"180"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx",[],["361","362"],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\reducers.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\aspectReducer.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\inspectorReducer.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\types.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\nodetype\\saga.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js",[],["363","364"],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\Footer.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx",["365"],"import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { DiagramComponent, TreeviewComponent } from \"..\";\r\nimport { getWorkspace } from \"../../redux/store/workspace/actions\";\r\nimport { WorkspaceState } from \"../../redux/store/workspace/types\";\r\nimport { RootState } from \"./../../redux/store/index\";\r\nimport textResources from \"../../textResources\";\r\nimport { ExplorerComponent } from \"../modules/explorerModule\";\r\nimport { InspectorComponent } from \"../modules/inspectorModule\";\r\n// import { UserState } from \"../../store/user/types\";\r\n// import { SETTING_KEY, SETTING_VALUE } from \"./../../models/user\";\r\n// import { getUser } from \"../../store/user/actions\";\r\n\r\ninterface RouteParams {\r\n  type: string;\r\n}\r\n\r\nconst Home = () => {\r\n  const workspaceState = useSelector<RootState>(\r\n    (state) => state.workspace\r\n  ) as WorkspaceState;\r\n  // const userState = useSelector<RootState>((state) => state.user) as UserState;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getWorkspace());\r\n    // dispatch(getUser(\"rl\", \"rl\"));\r\n  }, [dispatch]);\r\n\r\n  const params = useParams<RouteParams>();\r\n  const isOnline =\r\n    workspaceState && workspaceState.workspace && !workspaceState.fetching;\r\n\r\n  return (\r\n    <div className=\"home_container\">\r\n      <div className=\"explorer_view\">\r\n        <ExplorerComponent />\r\n      </div>\r\n      <div className=\"middle_content\">\r\n        <div className=\"workspace\">\r\n          {isOnline && (\r\n            <>\r\n              {params.type === \"treeview\" && (\r\n                <TreeviewComponent\r\n                  root={workspaceState.workspace.root}\r\n                  aspects={workspaceState.workspace.aspects}\r\n                  aspectDescriptors={workspaceState.workspace.aspectDescriptors}\r\n                />\r\n              )}\r\n              {params.type === \"diagram\" && (\r\n                <DiagramComponent\r\n                  root={workspaceState.workspace.root}\r\n                  aspects={workspaceState.workspace.aspects}\r\n                  aspectDescriptors={workspaceState.workspace.aspectDescriptors}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* <div className=\"inspector\">\r\n          {textResources.Inspector}\r\n          <InspectorComponent />\r\n        </div> */}\r\n      </div>\r\n      <div className=\"library\">{textResources.Library}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectInfo.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectDropdown.tsx",["366"],"import { CategoryDescriptor } from \"../../models/workspace\";\r\nimport \"react-dropdown/style.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getAspect } from \"../../redux/testing/getAspect\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  functional: CategoryDescriptor[];\r\n  product: CategoryDescriptor[];\r\n  location: CategoryDescriptor[];\r\n}\r\n\r\nconst AspectDropdown = ({ id, functional, product, location }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(getAspect());\r\n  };\r\n\r\n  return (\r\n    <div className=\"aspect_category\">\r\n      <select onChange={handleChange} className=\"select_category\">\r\n        {id === \"1\"\r\n          ? functional.map((category) => (\r\n              <option key={category.id} value={category.name}>\r\n                {category.name}\r\n              </option>\r\n            ))\r\n          : id === \"2\"\r\n          ? product.map((category) => (\r\n              <option key={category.id} value={category.name}>\r\n                {category.name}\r\n              </option>\r\n            ))\r\n          : id === \"3\"\r\n          ? location.map((category) => (\r\n              <option key={category.id} value={category.name}>\r\n                {category.name}\r\n              </option>\r\n            ))\r\n          : null}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AspectDropdown;\r\n","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts",["367","368","369","370","371"],"import {\r\n  Workspace,\r\n  Node,\r\n  Edge,\r\n  Aspects,\r\n  Graph,\r\n  CategoryDescriptor,\r\n  AspectDescriptor,\r\n  Connection,\r\n} from \"../models/workspace\";\r\nimport {\r\n  Diagram,\r\n  DiagramNode,\r\n  DiagramConnector,\r\n  DiagramConnectorType,\r\n  DiagramConnectionType,\r\n  DiagramConnection,\r\n  DIAGRAM_CONNECTOR_TYPE,\r\n  DIAGRAM_CONNECTION_TYPE,\r\n} from \"./../models/diagram\";\r\nimport { AspectRatioSharp } from \"@material-ui/icons\";\r\nimport { brotliDecompress } from \"zlib\";\r\nimport { nodetypeReducer } from \"../redux/store/nodetypes/reducers\";\r\n\r\nexport class WorkspaceService {\r\n  private workspace: Workspace;\r\n  functionalNodeMap: Map<string, Node>;\r\n  productNodeMap: Map<string, Node>;\r\n  functionalEdgeMap: Map<string, Edge>;\r\n  productEdgeMap: Map<string, Edge>;\r\n\r\n  proxyNodeMap: Map<string, Node>;\r\n  proxyEdgeMap: Map<string, Edge>;\r\n\r\n  constructor(workspace: Workspace) {\r\n    this.workspace = workspace;\r\n    this.functionalNodeMap = this.createNodeMap(\"1\", \"1\");\r\n    this.productNodeMap = this.createNodeMap(\"2\", \"1\");\r\n    this.functionalEdgeMap = this.createEdgeMap(\"1\", \"1\");\r\n    this.productEdgeMap = this.createEdgeMap(\"2\", \"1\");\r\n    this.proxyNodeMap = new Map<string, Node>();\r\n    this.proxyEdgeMap = new Map<string, Edge>();\r\n  }\r\n\r\n  createNodeMap(aspect: string, category: string): Map<string, Node> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Node>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.nodes.map((obj) => [obj.id, obj] as [string, Node])\r\n    );\r\n  }\r\n\r\n  createEdgeMap(aspect: string, category: string): Map<string, Edge> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Edge>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.edges.map((obj) => [obj.id, obj] as [string, Edge])\r\n    );\r\n  }\r\n\r\n  getProductLabel(nodeId: string): string {\r\n    var actualProductnode = this.productNodeMap.get(nodeId);\r\n    if (actualProductnode) {\r\n      return actualProductnode.label;\r\n    }\r\n\r\n    const actualNode = this.functionalNodeMap.get(nodeId);\r\n\r\n    if (!actualNode) return \"\";\r\n\r\n    // TODO: Use Typeregister\r\n    if (actualNode.type === \"imft:Reservoir\") return \"Reservoir\";\r\n  }\r\n\r\n  getRootEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        !node.type.toLowerCase().includes(\"input\") &&\r\n        !node.type.toLowerCase().includes(\"output\")\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getConnectorEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        (node.type.toLowerCase().includes(\"input\") ||\r\n          node.type.toLowerCase().includes(\"output\"))\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getFunctionalAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"1\");\r\n  }\r\n\r\n  getProductAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"2\");\r\n  }\r\n\r\n  getAreaAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"3\");\r\n  }\r\n\r\n  getFunctionalAspectCategories(): CategoryDescriptor[] {\r\n    let functionalCategories: CategoryDescriptor[] = [];\r\n    const fAspect = this.getFunctionalAspect();\r\n    fAspect.forEach((aspect) => {\r\n      functionalCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return functionalCategories;\r\n  }\r\n\r\n  getProductAspectCategories(): CategoryDescriptor[] {\r\n    let productCategories: CategoryDescriptor[] = [];\r\n    const pAspect = this.getProductAspect();\r\n    pAspect.forEach((aspect) => {\r\n      productCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return productCategories;\r\n  }\r\n\r\n  getAreaAspectCategories(): CategoryDescriptor[] {\r\n    let areaCategories: CategoryDescriptor[] = [];\r\n    const aAspect = this.getAreaAspect();\r\n    aAspect.forEach((aspect) => {\r\n      areaCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    if (!areaCategories || areaCategories.length <= 0) {\r\n      areaCategories.push({\r\n        id: null,\r\n        name: \"default\",\r\n        description: \"\",\r\n      });\r\n    }\r\n    return areaCategories;\r\n  }\r\n\r\n  // getNodesConnectedToRoot(aspectId: string): Node[] {\r\n  //     const aspectEdges: Edge[] = [];\r\n  //     const aspectNodes: Node[] = [];\r\n  //     const chosenAspect = this.workspace.aspects\r\n  // \t.filter(x => x.aspect === aspectId);\r\n\r\n  // \tchosenAspect.forEach(aspect => {\r\n  // \t\tif(aspect.graph.edges.filter(e => e.to === 'root' && e.type === 'imfo:partOf')){\r\n  // \t\t\taspectEdges.push({\r\n  // \t\t\t\tid: e.id;\r\n  // \t\t\t});\r\n  // \t\t}\r\n  // \t})\r\n\r\n  getConnectionEdges(nodeId: string): Connection[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type !== \"imfo:partOf\"\r\n    );\r\n    let filteredConnections: Connection[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      if (edge) {\r\n        var parent = aspects[0].graph.edges.filter(\r\n          (x) => x.from === edge.from && x.type === \"imfo:partOf\"\r\n        );\r\n\r\n        if (parent && parent.length > 0) {\r\n          filteredConnections.push({\r\n            id: edge.id,\r\n            type: edge.type,\r\n            from: parent[0].to,\r\n            to: edge.to,\r\n            connector: parent[0].id,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return filteredConnections;\r\n  }\r\n\r\n  getDiagram(nodeId: string): Diagram {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return null;\r\n\r\n    var diagram = new Diagram(\r\n      nodeId,\r\n      this.productNodeMap.get(nodeId)?.label ??\r\n        this.functionalNodeMap.get(nodeId)?.label ??\r\n        this.workspace.root.title\r\n    );\r\n    const nodeEdges = aspects[0].graph.edges.filter(\r\n      (x) =>\r\n        x.to === nodeId &&\r\n        x.type === \"imfo:partOf\" &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\") &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"output\")\r\n    );\r\n\r\n    diagram.nodes = nodeEdges.map((x) => {\r\n      const node = this.functionalNodeMap.get(x.from);\r\n      const label = this.productNodeMap.get(node.id)?.label ?? node.type;\r\n      const diagramNode = new DiagramNode(node.id, label);\r\n      diagramNode.connectors = this.getConnectors(node.id, aspects[0]);\r\n\r\n      diagram.connections = diagram.connections.concat(\r\n        this.getConnections(node.id, aspects[0], diagramNode.connectors)\r\n      );\r\n\r\n      return diagramNode;\r\n    });\r\n    return diagram;\r\n  }\r\n\r\n  getConnectors(nodeId: string, aspects: Aspects): DiagramConnector[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    const connectors = aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          x.type === \"imfo:partOf\" &&\r\n          (this.functionalNodeMap\r\n            .get(x.from)\r\n            .type.toLowerCase()\r\n            .includes(\"input\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"output\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"supply\"))\r\n      )\r\n      .map((x) => {\r\n        const diagramType = this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\")\r\n          ? (DIAGRAM_CONNECTOR_TYPE.TARGET as DiagramConnectorType)\r\n          : (DIAGRAM_CONNECTOR_TYPE.SOURCE as DiagramConnectorType);\r\n        const label = this.functionalNodeMap.get(x.from)?.type ?? x.type;\r\n        return new DiagramConnector(x.id, label, diagramType);\r\n      });\r\n    return connectors;\r\n  }\r\n\r\n  getConnections(\r\n    nodeId: string,\r\n    aspects: Aspects,\r\n    connectors: DiagramConnector[]\r\n  ): DiagramConnection[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    return aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          Object.values(DIAGRAM_CONNECTION_TYPE).includes(x.type)\r\n      )\r\n      .map((x) => {\r\n        const sourceParentEdge = aspects.graph.edges.filter(\r\n          (e) => e.from === \"n2\" && e.type === \"imfo:partOf\"\r\n        )[0];\r\n        const targetConnector = connectors.filter(\r\n          (x) => x.type === DIAGRAM_CONNECTOR_TYPE.TARGET\r\n        )[0];\r\n        // TODO: This values must be dynamic\r\n        return new DiagramConnection(\r\n          x.id,\r\n          x.type,\r\n          sourceParentEdge.to,\r\n          \"e2\",\r\n          \"n4\",\r\n          targetConnector.id,\r\n          x.type as DiagramConnectionType\r\n        );\r\n      });\r\n  }\r\n\r\n  guid(): string {\r\n    function _p8(s: boolean) {\r\n      var p = (Math.random().toString(16) + \"000000000\").substr(2, 8);\r\n      return s ? \"-\" + p.substr(0, 4) + \"-\" + p.substr(4, 4) : p;\r\n    }\r\n    return _p8(false) + _p8(true) + _p8(true) + _p8(false);\r\n  }\r\n\r\n  getProxyNodes(aspect: Aspects) {\r\n    if (\r\n      !aspect &&\r\n      !aspect.graph &&\r\n      !aspect.graph.edges &&\r\n      aspect.graph.edges.length <= 0\r\n    )\r\n      return;\r\n\r\n    aspect.graph.nodes\r\n      .filter(\r\n        (x) =>\r\n          !x.type.toLowerCase().includes(\"input\") &&\r\n          !x.type.toLowerCase().includes(\"output\") &&\r\n          !x.type.toLowerCase().includes(\"pipeline\")\r\n      )\r\n      .forEach((n) => {\r\n        const sourceNodeId = this.guid();\r\n        const targetNodeId = this.guid();\r\n\r\n        aspect.graph.nodes.push({\r\n          id: sourceNodeId,\r\n          type: \"imfo:SupplyOutput\",\r\n          label: \"Supply output\",\r\n        });\r\n        aspect.graph.nodes.push({\r\n          id: targetNodeId,\r\n          type: \"imfo:SupplyInput\",\r\n          label: \"Supply input\",\r\n        });\r\n\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: sourceNodeId,\r\n          to: n.id,\r\n        });\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: targetNodeId,\r\n          to: n.id,\r\n        });\r\n      });\r\n  }\r\n}\r\n","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\actions.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\getAspect.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DrawMiniMap.tsx",["372"],"import { MiniMap, Node } from \"react-flow-renderer\";\r\n\r\nconst DrawMiniMap = () => {\r\n  let color: string;\r\n\r\n  return (\r\n    <MiniMap\r\n      nodeStrokeColor={(node: Node): string => {\r\n        return node.type === \"input\"\r\n          ? (color = \"#00041d0\")\r\n          : node.type === \"selectorNode\"\r\n          ? (color = \"#ccc\")\r\n          : node.type === \"output\"\r\n          ? (color = \"#ff0072\")\r\n          : (color = \"#eee\");\r\n      }}\r\n      nodeColor={(node: Node): string => {\r\n        return node.type === \"selectorNode\"\r\n          ? (color = \"#ccc\")\r\n          : (color = \"#fff\");\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DrawMiniMap;\r\n","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorContent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedToggleButton.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\changeInspector.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledHeader.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledToggleButton.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledInspectorContent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\ExplorerComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\helpers\\GetProjectData.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facilityComponent\\FacilityComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\checkboxComponent\\CheckboxComponent.tsx",["373"],"import react, { useState } from \"react\";\r\nimport \"./checkbox.scss\";\r\ninterface CheckboxComponentProps {\r\n  id: string;\r\n  inputLabel: string;\r\n  checked?: boolean;\r\n}\r\n\r\nexport const CheckboxComponent = ({\r\n  id,\r\n  inputLabel,\r\n  checked,\r\n}: CheckboxComponentProps) => {\r\n  const [isChecked, setChecked] = useState(false);\r\n  const handleCheckboxChange = (event) => {\r\n    setChecked(!isChecked);\r\n  };\r\n  return (\r\n    <div className=\"checkbox_container\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={handleCheckboxChange}\r\n      />\r\n      <label className=\"checkbox_label\">{inputLabel}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckboxComponent;\r\n","C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\aspectComponent\\AspectComponent.tsx",[],"C:\\Users\\arisa.seljestokken\\Documents\\Prosjekter\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facetComponent\\FacetComponent.tsx",[],{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","severity":1,"message":"379","line":10,"column":10,"nodeType":"380","messageId":"381","endLine":10,"endColumn":28},{"ruleId":"378","severity":1,"message":"382","line":16,"column":11,"nodeType":"380","messageId":"381","endLine":16,"endColumn":16},{"ruleId":"378","severity":1,"message":"383","line":6,"column":3,"nodeType":"380","messageId":"381","endLine":6,"endColumn":8},{"ruleId":"378","severity":1,"message":"384","line":8,"column":3,"nodeType":"380","messageId":"381","endLine":8,"endColumn":19},{"ruleId":"378","severity":1,"message":"385","line":21,"column":10,"nodeType":"380","messageId":"381","endLine":21,"endColumn":26},{"ruleId":"378","severity":1,"message":"386","line":22,"column":10,"nodeType":"380","messageId":"381","endLine":22,"endColumn":26},{"ruleId":"378","severity":1,"message":"387","line":23,"column":10,"nodeType":"380","messageId":"381","endLine":23,"endColumn":25},{"ruleId":"378","severity":1,"message":"388","line":20,"column":14,"nodeType":"380","messageId":"381","endLine":20,"endColumn":19},{"ruleId":"378","severity":1,"message":"389","line":1,"column":8,"nodeType":"380","messageId":"381","endLine":1,"endColumn":13},"no-native-reassign",["390"],"no-negated-in-lhs",["391"],"@typescript-eslint/no-unused-vars","'InspectorComponent' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'Graph' is defined but never used.","'AspectDescriptor' is defined but never used.","'AspectRatioSharp' is defined but never used.","'brotliDecompress' is defined but never used.","'nodetypeReducer' is defined but never used.","'color' is assigned a value but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]