[{"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\reportWebVitals.js":"1","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx":"2","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx":"3","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx":"4","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\workspace\\WorkspaceComponent.tsx":"5","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\workspace\\reducers.ts":"6","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\workspace\\types.ts":"7","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\index.ts":"8","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\workspace\\saga.ts":"9","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\workspace\\actions.ts":"10","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\index.ts":"11","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js":"12","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx":"13","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\workspace\\index.ts":"14","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts":"15","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts":"16","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts":"17","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx":"18","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts":"19","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts":"20","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\index.ts":"21","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx":"22","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\Footer.tsx":"23","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\nodetypes\\reducers.ts":"24","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\nodetypes\\types.ts":"25","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\nodetypes\\actions.ts":"26","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\nodetype\\saga.ts":"27","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js":"28","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\node\\MbNodeWidget.tsx":"29","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\node\\MbNodeModel.ts":"30","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\node\\MbNodeFactory.tsx":"31","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\index.ts":"32","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\port\\MbPortFactory.ts":"33","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\port\\MbPortModel.ts":"34","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkModel.ts":"35","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\label\\MbLabelModel.tsx":"36","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\treeview\\reducers.ts":"37","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\treeview\\types.ts":"38","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\treeview\\saga.ts":"39","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\TreeviewDataset.js":"40","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\treeview\\actions.ts":"41","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\port\\MbPortLabelWidget.tsx":"42","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkFactory.tsx":"43","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkWidget.tsx":"44","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkPointWidget.tsx":"45","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkSegmentWidget.tsx":"46","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\label\\MbLabelFactory.tsx":"47","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\label\\MbLabelWidget.tsx":"48","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts":"49","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx":"50","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts":"51","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx":"52","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\webclient\\index.ts":"53","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\webclient\\types.ts":"54","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts":"55","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts":"56"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"58"},{"size":972,"mtime":1613565108637,"results":"59","hashOfConfig":"58"},{"size":397,"mtime":1612956930086,"results":"60","hashOfConfig":"58"},{"size":783,"mtime":1612534775687,"results":"61","hashOfConfig":"58"},{"size":7592,"mtime":1614079312860,"results":"62","hashOfConfig":"58"},{"size":720,"mtime":1614009398647,"results":"63","hashOfConfig":"58"},{"size":719,"mtime":1614009376062,"results":"64","hashOfConfig":"58"},{"size":616,"mtime":1613380803753,"results":"65","hashOfConfig":"58"},{"size":1399,"mtime":1614070993708,"results":"66","hashOfConfig":"58"},{"size":374,"mtime":1614009444854,"results":"67","hashOfConfig":"58"},{"size":891,"mtime":1613380133096,"results":"68","hashOfConfig":"58"},{"size":10219,"mtime":1614072147116,"results":"69","hashOfConfig":"58"},{"size":736,"mtime":1614070940313,"results":"70","hashOfConfig":"58"},{"size":77,"mtime":1613480168640,"results":"71","hashOfConfig":"58"},{"size":58,"mtime":1612941786577,"results":"72","hashOfConfig":"58"},{"size":131,"mtime":1612941776778,"results":"73","hashOfConfig":"58"},{"size":54,"mtime":1612955648121,"results":"74","hashOfConfig":"58"},{"size":459,"mtime":1613727641090,"results":"75","hashOfConfig":"58"},{"size":416,"mtime":1613558397869,"results":"76","hashOfConfig":"58"},{"size":63,"mtime":1612955890890,"results":"77","hashOfConfig":"58"},{"size":60,"mtime":1612955828571,"results":"78","hashOfConfig":"58"},{"size":619,"mtime":1612955903422,"results":"79","hashOfConfig":"58"},{"size":607,"mtime":1612955806599,"results":"80","hashOfConfig":"58"},{"size":717,"mtime":1612957590954,"results":"81","hashOfConfig":"58"},{"size":758,"mtime":1612957324096,"results":"82","hashOfConfig":"58"},{"size":374,"mtime":1612957422953,"results":"83","hashOfConfig":"58"},{"size":1119,"mtime":1613463900642,"results":"84","hashOfConfig":"58"},{"size":414,"mtime":1613631362166,"results":"85","hashOfConfig":"58"},{"size":1976,"mtime":1613631217486,"results":"86","hashOfConfig":"58"},{"size":2790,"mtime":1613552214518,"results":"87","hashOfConfig":"58"},{"size":509,"mtime":1613485849188,"results":"88","hashOfConfig":"58"},{"size":589,"mtime":1613469843741,"results":"89","hashOfConfig":"58"},{"size":409,"mtime":1613134616760,"results":"90","hashOfConfig":"58"},{"size":1955,"mtime":1613662802249,"results":"91","hashOfConfig":"58"},{"size":3296,"mtime":1613471847255,"results":"92","hashOfConfig":"58"},{"size":891,"mtime":1613485639081,"results":"93","hashOfConfig":"58"},{"size":691,"mtime":1613379576360,"results":"94","hashOfConfig":"58"},{"size":730,"mtime":1613379377255,"results":"95","hashOfConfig":"58"},{"size":1097,"mtime":1613380685597,"results":"96","hashOfConfig":"58"},{"size":1429,"mtime":1613380425991,"results":"97","hashOfConfig":"58"},{"size":376,"mtime":1613380058197,"results":"98","hashOfConfig":"58"},{"size":1091,"mtime":1613471279659,"results":"99","hashOfConfig":"58"},{"size":1383,"mtime":1613468225388,"results":"100","hashOfConfig":"58"},{"size":3942,"mtime":1613133720652,"results":"101","hashOfConfig":"58"},{"size":1263,"mtime":1613469350020,"results":"102","hashOfConfig":"58"},{"size":1417,"mtime":1613472429597,"results":"103","hashOfConfig":"58"},{"size":543,"mtime":1613485670643,"results":"104","hashOfConfig":"58"},{"size":572,"mtime":1613469795449,"results":"105","hashOfConfig":"58"},{"size":73,"mtime":1613480139007,"results":"106","hashOfConfig":"58"},{"size":336,"mtime":1613482352984,"results":"107","hashOfConfig":"58"},{"size":71,"mtime":1613557750177,"results":"108","hashOfConfig":"58"},{"size":2704,"mtime":1614070891145,"results":"109","hashOfConfig":"58"},{"size":26,"mtime":1613736669216,"results":"110","hashOfConfig":"58"},{"size":1618,"mtime":1614003211432,"results":"111","hashOfConfig":"58"},{"size":60,"mtime":1614075060979,"results":"112","hashOfConfig":"58"},{"size":3750,"mtime":1614080457382,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1ud2c32",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"119"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\reportWebVitals.js",[],["231","232"],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx",[],["233","234"],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\workspace\\WorkspaceComponent.tsx",["235","236"],"import React, { FC, useState } from \"react\";\r\nimport createEngine, { DiagramModel } from \"@projectstorm/react-diagrams\";\r\nimport { CanvasWidget } from \"@projectstorm/react-canvas-core\";\r\nimport { Workspace, Node, Edge } from \"../../models/workspace\";\r\nimport {\r\n  MbNodeFactory,\r\n  MbPortFactory,\r\n  MbNodeModel,\r\n  MbLinkFactory,\r\n  MbLabelFactory,\r\n  // MbLinkModel,\r\n  // MbPortModel\r\n} from \"../../store/models\";\r\nimport { WorkspaceService } from './../../services/';\r\nimport { ToolboxComponent } from \"..\";\r\n\r\nconst WorkspaceComponent: FC<Workspace> = ({ root, aspects }: Workspace) => {\r\n  useState(() => {\r\n    console.log(\"this will run the first time the component renders!\");\r\n  });\r\n\r\n  const engine = createEngine();\r\n  engine.getPortFactories().registerFactory(new MbPortFactory());\r\n  engine.getNodeFactories().registerFactory(new MbNodeFactory());\r\n  engine.getLinkFactories().registerFactory(new MbLinkFactory());\r\n  engine.getLabelFactories().registerFactory(new MbLabelFactory());\r\n\r\n  const model = new DiagramModel();\r\n  const mainAspect = aspects.filter(x => x.aspect === \"1\" && x.category === \"1\")[0];\r\n  \r\n  \r\n\r\n  if(mainAspect) {\r\n    var service = new WorkspaceService({root, aspects});\r\n    \r\n\r\n\r\n    \r\n    \r\n\r\n    var rootEdges = service.getRootEdges('n4');\r\n\r\n    // console.log(service.functionalNodeMap);\r\n    // console.log(edgeMap);\r\n    // console.log(rootNodes);\r\n    // console.log(service.productNodeMap);\r\n  }\r\n\r\n\r\n  rootEdges.forEach(edge => {\r\n    var m = new MbNodeModel({ rdfType: service.getProductLabel(edge.from), rdfId: edge.from });\r\n    model.addNode(m);\r\n  });\r\n\r\n\r\n  // const map = Object.assign({}, ...workspace2.nodes.map(s => ({[s.id]: s.value})));\r\n\r\n  // var nodeMap = new Map(workspace2.nodes.map(obj => [obj.id, obj] as [string, Node2]));\r\n  // var links = workspace2.edges.filter(x => x.type === \"consumedBy\");\r\n\r\n  // var map = new Map(workspace2.nodes.map(i => [i.id, {i}]));\r\n\r\n  // interface LinkMap {\r\n  //   from: MbPortModel,\r\n  //   to: MbPortModel\r\n  //   label: string\r\n  // };\r\n\r\n\r\n\r\n//  let linkMap: LinkMap[] = [];  \r\n\r\n//   workspace2.nodes.forEach(node => {\r\n//     var connections = workspace2.edges.filter(x => x.to === node.id && x.type === \"hasParent\");\r\n//     if(connections.length > 0) {\r\n//       var m = new MbNodeModel({ rdfType: node.label, rdfId: node.id });\r\n\r\n//       if(node && node.label && node.label.toLowerCase().includes('reservoir')) {\r\n//         m.getOptions().svg = true;\r\n//       }\r\n\r\n//       connections.forEach(c => {\r\n//         var mapNode = nodeMap.get(c.from);\r\n//         if(mapNode && mapNode.label && mapNode.label.toLowerCase().includes('out')) {\r\n//           m.addOutPort(mapNode.label);\r\n          \r\n\r\n//         } else {\r\n//           m.addInPort(mapNode.label);\r\n//         }        \r\n//       });\r\n//       m.setLocked(false);\r\n//       m.registerListener({\r\n//         // selectionChanged: () => { console.log(n.getOptions()) },\r\n//         positionChanged: () => {\r\n//           // console.log(m.getPosition());\r\n//         },\r\n//       });      \r\n//       model.addNode(m);\r\n//     }    \r\n//   });\r\n\r\n  \r\n\r\n  // links.forEach(x => {\r\n  //   // model.getNode\r\n  // })\r\n\r\n        // link them and add a label to the link\r\n        // const link = port1.link<MbLinkModel>(port2);\r\n        // link.addLabel('Hello World!');\r\n\r\n\r\n  \r\n      model.setLocked(false);\r\n\r\n\r\n  // const xxx = workspace2.nodes.map(node => {\r\n  //   let m = new MbNodeModel({ rdfType: node.label, rdfId: node.id });\r\n  //   let connections = workspace2.edges.filter(edge => edge.type === \"hasParent\" && edge.to === node.id).map(e => {\r\n      \r\n  //   });\r\n    \r\n\r\n  //   return m;\r\n  // });\r\n\r\n\r\n\r\n\r\n\r\n  // if (nodes) {\r\n  //   nodes.forEach((node) => {\r\n  //     const n = new MbNodeModel({ rdfType: node.name, rdfId: node.id });\r\n  //     n.setPosition(node.x, node.y);\r\n  //     node.ports.forEach((port) => {\r\n  //       if (port.type === PortType.In) {\r\n  //         n.addInPort(port.name, true);\r\n  //       } else {\r\n  //         n.addOutPort(port.name, true);\r\n  //       }\r\n\r\n  //       // // link them and add a label to the link\r\n  //       // const link = n.link<DefaultLinkModel>(port2);\r\n  //       // link.addLabel('Hello World!');\r\n\r\n  //     });\r\n\r\n  //     n.setLocked(false);\r\n\r\n  //     n.registerListener({\r\n  //       // selectionChanged: () => { console.log(n.getOptions()) },\r\n  //       positionChanged: () => {\r\n  //         console.log(n.getPosition());\r\n  //       },\r\n  //     });\r\n\r\n  //     // these are never triggered\r\n  //     // zoomUpdated: e => console.log(\"zoomUpdated\", e),\r\n  //     // gridUpdated: e => console.log(\"gridUpdated\", e),\r\n  //     // offsetUpdated: e => console.log(\"offsetUpdated\", e),\r\n  //     // entityRemoved: e => console.log(\"entityRemoved\", e),\r\n  //     // n.registerListener({\r\n  //     //   eventDidFire: (event) => {console.log(\"\", event)})\r\n  //     // });\r\n\r\n  //     model.addNode(n);\r\n  //     model.setLocked(false);\r\n  //   });\r\n  // }\r\n\r\n  // model.registerListener({\r\n  //   // nodesUpdated: (event) => {console.log(event)},\r\n  //   // linksUpdated: (event) => {console.log(event)},\r\n  //   // entityRemoved: (event) => {console.log(event)}\r\n  //   eventDidFire: (event) => {console.log(event)}\r\n  // });\r\n  model.registerListener({\r\n    nodesUpdated: () => {\r\n      console.log(\"Event nodesUpdated\");\r\n    },\r\n    offsetUpdated: () => {\r\n      console.log(\"Event offsetUpdated\");\r\n    },\r\n  });\r\n\r\n  engine.setModel(model);\r\n\r\n  // // link them and add a label to the link\r\n  // const link = port1.link<DefaultLinkModel>(port2);\r\n  // link.addLabel('Hello World!');\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"workspace\">\r\n        <div className=\"workspace__left-area\">\r\n          <ToolboxComponent />\r\n        </div>\r\n\r\n        <div className=\"workspace__right-area\">\r\n          <h1>{root.title}</h1>\r\n          <div\r\n            id=\"canvas\"\r\n            className=\"graph\"\r\n            onDrop={(e) => {\r\n              // let nodeType = JSON.parse(e.dataTransfer.getData(\"node_type\"));\r\n\r\n              // const node: Node = {\r\n              //   id: \"123\",\r\n              //   // name: \"Reservoir\",\r\n              //   // x: 200,\r\n              //   // y: 200,\r\n              //   // ports: [],\r\n              //   // nodeType: null,\r\n              // };\r\n\r\n              const n = new MbNodeModel({\r\n                rdfType: '',\r\n                rdfId: '',\r\n                svg: true,\r\n              });\r\n              \r\n              n.addOutPort(\"Well fluid\", true);\r\n              n.addOutPort(\"Gas\", true);\r\n\r\n              // let newNode = new FamNode();\r\n              // newNode.id = '';\r\n\r\n              //       id: string,\r\n              // name: string,\r\n              // x: number,\r\n              // y: number,\r\n              // ports: Port[],\r\n              // nodeType: Nodetype\r\n\r\n              var pos = engine.getRelativeMousePoint(e);\r\n              n.setPosition(pos.x, pos.y);\r\n              model.addNode(n);\r\n              engine.setModel(model);\r\n\r\n              // var nodes = model.getNodes();\r\n              // console.log(nodes);\r\n            }}\r\n            onDragOver={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <CanvasWidget engine={engine} className=\"canvas\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <button onClick={() => dispatch(getWorkspace({ id: 1, name: 'jsv', nodes: [] }))}>Hent graf</button> */}\r\n\r\n      {/* <NodeTypeOverview /> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WorkspaceComponent;\r\n","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\workspace\\reducers.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\workspace\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\workspace\\saga.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\workspace\\actions.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\workspace\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\Footer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\nodetypes\\reducers.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\nodetypes\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\nodetypes\\actions.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\nodetype\\saga.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\node\\MbNodeWidget.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\node\\MbNodeModel.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\node\\MbNodeFactory.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\port\\MbPortFactory.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\port\\MbPortModel.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkModel.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\label\\MbLabelModel.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\treeview\\reducers.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\treeview\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\sagas\\treeview\\saga.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\TreeviewDataset.js",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\treeview\\actions.ts",[],["237","238"],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\port\\MbPortLabelWidget.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkFactory.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkWidget.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkPointWidget.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\link\\MbLinkSegmentWidget.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\label\\MbLabelFactory.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\store\\models\\label\\MbLabelWidget.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\webclient\\index.ts",[],["239","240"],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\webclient\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":4,"column":21,"nodeType":"247","messageId":"248","endLine":4,"endColumn":25},{"ruleId":"245","severity":1,"message":"249","line":4,"column":27,"nodeType":"247","messageId":"248","endLine":4,"endColumn":31},{"ruleId":"241","replacedBy":"250"},{"ruleId":"243","replacedBy":"251"},{"ruleId":"241","replacedBy":"252"},{"ruleId":"243","replacedBy":"253"},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"@typescript-eslint/no-unused-vars","'Node' is defined but never used.","Identifier","unusedVar","'Edge' is defined but never used.",["254"],["255"],["254"],["255"],"no-global-assign","no-unsafe-negation"]