<<<<<<< HEAD
[{"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx":"1","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts":"2","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts":"3","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts":"4","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts":"5","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\project\\reducers.ts":"6","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\inspectorReducer.tsx":"7","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\showInspectorReducer.tsx":"8","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\library\\reducers\\showLibraryReducer.tsx":"9","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\explorer\\reducers\\showExplorerReducer.tsx":"10","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts":"11","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts":"12","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\project\\types.ts":"13","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts":"14","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts":"15","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts":"16","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts":"17","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts":"18","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts":"19","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts":"20","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts":"21","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx":"22","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx":"23","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx":"24","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx":"25","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx":"26","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx":"27","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx":"28","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx":"29","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx":"30","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectInfo.tsx":"31","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectDropdown.tsx":"32","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js":"33","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js":"34","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts":"35","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts":"36","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts":"37","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx":"38","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\helpers\\SaveViewState.tsx":"39","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\localStorage\\localStorage.tsx":"40","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx":"41","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx":"42","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts":"43","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\index.ts":"44","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\index.ts":"45","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\index.ts":"46","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts":"47","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\index.ts":"48","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts":"49","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts":"50","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx":"51","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx":"52","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx":"53","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\ExplorerModule.tsx":"54","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\LibraryModule.tsx":"55","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorHeader.tsx":"56","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorModule.tsx":"57","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts":"58","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts":"59","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\SwitchWrapper.tsx":"60","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\utils.ts":"61","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\IconsWrapper.tsx":"62","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\VisualIconWrapper.tsx":"63","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\edges\\index.ts":"64","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\index.ts":"65","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\index.ts":"66","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts":"67","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts":"68","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts":"69","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\index.ts":"70","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\edges\\DefaultEdgeType.tsx":"71","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\index.ts":"72","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeader.ts":"73","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\CollapsedIcon.tsx":"74","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerTitle.tsx":"75","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\AspectWrapper.tsx":"76","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\FacilityHeader.tsx":"77","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx":"78","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentParagraph.tsx":"79","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentInput.tsx":"80","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\InspectorTitle.tsx":"81","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\IconWrapper.tsx":"82","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx":"83","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentContainer.tsx":"84","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentColumn.tsx":"85","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentDataWrapper.tsx":"86","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeaderWrapper.tsx":"87","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleExplorerButton.tsx":"88","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleLibraryButton.tsx":"89","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleInspectorButton.tsx":"90","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx":"91","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ContentWrapper.tsx":"92","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerContainer.tsx":"93","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\HeaderWrapper.tsx":"94","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\IconWrapper.tsx":"95","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\CollapsedIcon.tsx":"96","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\LibraryContainer.tsx":"97","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchIconWrapper.tsx":"98","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchBox.tsx":"99","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\ContentWrapper.tsx":"100","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\TextWrapper.tsx":"101","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\IconWrapper.tsx":"102","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SidebarWrapper.tsx":"103","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\HeaderWrapper.tsx":"104","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\Header.tsx":"105","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx":"106","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\project\\actions.ts":"107","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TreeviewWrapper.tsx":"108","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\BlockviewWrapper.tsx":"109","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TitleWrapper.tsx":"110","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TextWrapper.tsx":"111","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\animated\\AnimatedMenu.tsx":"112","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx":"113","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facilityComponent\\FacilityComponent.tsx":"114","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\animated\\AnimatedMenu.tsx":"115","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\helpers\\GetProjectData.tsx":"116","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts":"117","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeInspector.tsx":"118","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\aspectComponent\\AspectComponent.tsx":"119","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\checkboxComponent\\CheckboxComponent.tsx":"120","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx":"121","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx":"122","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx":"123","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facetComponent\\FacetComponent.tsx":"124","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\project\\saga.ts":"125","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\ProjectDataset.js":"126","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\FlowTree.tsx":"127","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\project\\index.ts":"128","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\project\\project.ts":"129","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Aspect.tsx":"130","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Function.tsx":"131","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Product.tsx":"132","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Location.tsx":"133","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\MiniMapComponent.tsx":"134","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\library\\reducers.ts":"135","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\library\\actions.ts":"136","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\library\\types.ts":"137","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\library\\saga.ts":"138","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\flow\\dragAndDrop\\Sidebar.tsx":"139","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\LibraryDataset.js":"140"},{"size":511,"mtime":1616656792198,"results":"141","hashOfConfig":"142"},{"size":1424,"mtime":1617626652837,"results":"143","hashOfConfig":"142"},{"size":373,"mtime":1617625974683,"results":"144","hashOfConfig":"142"},{"size":747,"mtime":1616656792232,"results":"145","hashOfConfig":"142"},{"size":824,"mtime":1616656792228,"results":"146","hashOfConfig":"142"},{"size":2349,"mtime":1617102491193,"results":"147","hashOfConfig":"142"},{"size":900,"mtime":1616662982547,"results":"148","hashOfConfig":"142"},{"size":597,"mtime":1616998977856,"results":"149","hashOfConfig":"142"},{"size":580,"mtime":1616755486415,"results":"150","hashOfConfig":"142"},{"size":587,"mtime":1616998989315,"results":"151","hashOfConfig":"142"},{"size":716,"mtime":1616656792233,"results":"152","hashOfConfig":"142"},{"size":692,"mtime":1616656792229,"results":"153","hashOfConfig":"142"},{"size":1447,"mtime":1617099302699,"results":"154","hashOfConfig":"142"},{"size":806,"mtime":1617625297322,"results":"155","hashOfConfig":"142"},{"size":56,"mtime":1616656792109,"results":"156","hashOfConfig":"142"},{"size":58,"mtime":1615381562416,"results":"157","hashOfConfig":"142"},{"size":63,"mtime":1615381562417,"results":"158","hashOfConfig":"142"},{"size":329,"mtime":1616662982470,"results":"159","hashOfConfig":"142"},{"size":215,"mtime":1616656792116,"results":"160","hashOfConfig":"142"},{"size":1409,"mtime":1616656792219,"results":"161","hashOfConfig":"142"},{"size":1136,"mtime":1616656792217,"results":"162","hashOfConfig":"142"},{"size":2307,"mtime":1616998989263,"results":"163","hashOfConfig":"142"},{"size":333,"mtime":1616656792108,"results":"164","hashOfConfig":"142"},{"size":2095,"mtime":1616998989249,"results":"165","hashOfConfig":"142"},{"size":516,"mtime":1616656792110,"results":"166","hashOfConfig":"142"},{"size":3263,"mtime":1616662982336,"results":"167","hashOfConfig":"142"},{"size":572,"mtime":1616656792111,"results":"168","hashOfConfig":"142"},{"size":187,"mtime":1616656792180,"results":"169","hashOfConfig":"142"},{"size":1405,"mtime":1616998977838,"results":"170","hashOfConfig":"142"},{"size":589,"mtime":1616662982453,"results":"171","hashOfConfig":"142"},{"size":506,"mtime":1616755486410,"results":"172","hashOfConfig":"142"},{"size":1121,"mtime":1616998989311,"results":"173","hashOfConfig":"142"},{"size":7908,"mtime":1616662982474,"results":"174","hashOfConfig":"142"},{"size":723,"mtime":1616656792194,"results":"175","hashOfConfig":"142"},{"size":11955,"mtime":1617626039776,"results":"176","hashOfConfig":"142"},{"size":342,"mtime":1616656792231,"results":"177","hashOfConfig":"142"},{"size":1059,"mtime":1616998989247,"results":"178","hashOfConfig":"142"},{"size":746,"mtime":1616998989319,"results":"179","hashOfConfig":"142"},{"size":778,"mtime":1616998989250,"results":"180","hashOfConfig":"142"},{"size":921,"mtime":1616998989318,"results":"181","hashOfConfig":"142"},{"size":888,"mtime":1616656792121,"results":"182","hashOfConfig":"142"},{"size":528,"mtime":1616656792118,"results":"183","hashOfConfig":"142"},{"size":56,"mtime":1616656792237,"results":"184","hashOfConfig":"142"},{"size":437,"mtime":1616998989261,"results":"185","hashOfConfig":"142"},{"size":132,"mtime":1617174977207,"results":"186","hashOfConfig":"142"},{"size":90,"mtime":1616998989275,"results":"187","hashOfConfig":"142"},{"size":130,"mtime":1616755486390,"results":"188","hashOfConfig":"142"},{"size":61,"mtime":1616755486399,"results":"189","hashOfConfig":"142"},{"size":24,"mtime":1615381562354,"results":"190","hashOfConfig":"142"},{"size":26,"mtime":1615381562353,"results":"191","hashOfConfig":"142"},{"size":673,"mtime":1616656792120,"results":"192","hashOfConfig":"142"},{"size":676,"mtime":1616662982343,"results":"193","hashOfConfig":"142"},{"size":614,"mtime":1616656792124,"results":"194","hashOfConfig":"142"},{"size":1804,"mtime":1616998989266,"results":"195","hashOfConfig":"142"},{"size":2010,"mtime":1617627894072,"results":"196","hashOfConfig":"142"},{"size":342,"mtime":1616998989286,"results":"197","hashOfConfig":"142"},{"size":1585,"mtime":1616998989288,"results":"198","hashOfConfig":"142"},{"size":284,"mtime":1616656792201,"results":"199","hashOfConfig":"142"},{"size":2558,"mtime":1616656792200,"results":"200","hashOfConfig":"142"},{"size":194,"mtime":1616998989255,"results":"201","hashOfConfig":"142"},{"size":1742,"mtime":1617635670647,"results":"202","hashOfConfig":"142"},{"size":177,"mtime":1616998989253,"results":"203","hashOfConfig":"142"},{"size":207,"mtime":1616998989259,"results":"204","hashOfConfig":"142"},{"size":63,"mtime":1616998977749,"results":"205","hashOfConfig":"142"},{"size":198,"mtime":1617101864813,"results":"206","hashOfConfig":"142"},{"size":496,"mtime":1616998989285,"results":"207","hashOfConfig":"142"},{"size":124,"mtime":1616656792148,"results":"208","hashOfConfig":"142"},{"size":475,"mtime":1616998989294,"results":"209","hashOfConfig":"142"},{"size":203,"mtime":1616998989301,"results":"210","hashOfConfig":"142"},{"size":225,"mtime":1616998989238,"results":"211","hashOfConfig":"142"},{"size":2495,"mtime":1617106462311,"results":"212","hashOfConfig":"142"},{"size":598,"mtime":1616998989310,"results":"213","hashOfConfig":"142"},{"size":1053,"mtime":1616755486381,"results":"214","hashOfConfig":"142"},{"size":292,"mtime":1616998989277,"results":"215","hashOfConfig":"142"},{"size":201,"mtime":1616998989280,"results":"216","hashOfConfig":"142"},{"size":181,"mtime":1616998989277,"results":"217","hashOfConfig":"142"},{"size":139,"mtime":1616998989281,"results":"218","hashOfConfig":"142"},{"size":1138,"mtime":1616662982363,"results":"219","hashOfConfig":"142"},{"size":156,"mtime":1616998989362,"results":"220","hashOfConfig":"142"},{"size":238,"mtime":1616998989364,"results":"221","hashOfConfig":"142"},{"size":196,"mtime":1616998989297,"results":"222","hashOfConfig":"142"},{"size":171,"mtime":1616998989295,"results":"223","hashOfConfig":"142"},{"size":287,"mtime":1616755486392,"results":"224","hashOfConfig":"142"},{"size":214,"mtime":1616998989366,"results":"225","hashOfConfig":"142"},{"size":183,"mtime":1616998989368,"results":"226","hashOfConfig":"142"},{"size":309,"mtime":1616755486379,"results":"227","hashOfConfig":"142"},{"size":333,"mtime":1616755486382,"results":"228","hashOfConfig":"142"},{"size":915,"mtime":1616998989235,"results":"229","hashOfConfig":"142"},{"size":909,"mtime":1616755486344,"results":"230","hashOfConfig":"142"},{"size":970,"mtime":1616998989237,"results":"231","hashOfConfig":"142"},{"size":816,"mtime":1616998989289,"results":"232","hashOfConfig":"142"},{"size":229,"mtime":1616998989278,"results":"233","hashOfConfig":"142"},{"size":302,"mtime":1616998989279,"results":"234","hashOfConfig":"142"},{"size":193,"mtime":1616998989282,"results":"235","hashOfConfig":"142"},{"size":265,"mtime":1616998989283,"results":"236","hashOfConfig":"142"},{"size":274,"mtime":1616998989303,"results":"237","hashOfConfig":"142"},{"size":255,"mtime":1616998989306,"results":"238","hashOfConfig":"142"},{"size":194,"mtime":1616755486404,"results":"239","hashOfConfig":"142"},{"size":283,"mtime":1616755486404,"results":"240","hashOfConfig":"142"},{"size":228,"mtime":1616755486401,"results":"241","hashOfConfig":"142"},{"size":193,"mtime":1616755486406,"results":"242","hashOfConfig":"142"},{"size":170,"mtime":1616755486402,"results":"243","hashOfConfig":"142"},{"size":271,"mtime":1616998989307,"results":"244","hashOfConfig":"142"},{"size":191,"mtime":1616998989357,"results":"245","hashOfConfig":"142"},{"size":254,"mtime":1616998989304,"results":"246","hashOfConfig":"142"},{"size":621,"mtime":1616662982413,"results":"247","hashOfConfig":"142"},{"size":728,"mtime":1617099328273,"results":"248","hashOfConfig":"142"},{"size":184,"mtime":1616998989258,"results":"249","hashOfConfig":"142"},{"size":184,"mtime":1616998989252,"results":"250","hashOfConfig":"142"},{"size":210,"mtime":1616998989257,"results":"251","hashOfConfig":"142"},{"size":235,"mtime":1616998989256,"results":"252","hashOfConfig":"142"},{"size":517,"mtime":1616998989309,"results":"253","hashOfConfig":"142"},{"size":534,"mtime":1616998989299,"results":"254","hashOfConfig":"142"},{"size":958,"mtime":1616998989273,"results":"255","hashOfConfig":"142"},{"size":532,"mtime":1616998989284,"results":"256","hashOfConfig":"142"},{"size":860,"mtime":1616755486375,"results":"257","hashOfConfig":"142"},{"size":179,"mtime":1616656792147,"results":"258","hashOfConfig":"142"},{"size":396,"mtime":1616662982551,"results":"259","hashOfConfig":"142"},{"size":1050,"mtime":1616755486361,"results":"260","hashOfConfig":"142"},{"size":737,"mtime":1616998989269,"results":"261","hashOfConfig":"142"},{"size":3342,"mtime":1616662982375,"results":"262","hashOfConfig":"142"},{"size":191,"mtime":1616662982373,"results":"263","hashOfConfig":"142"},{"size":477,"mtime":1616656792146,"results":"264","hashOfConfig":"142"},{"size":403,"mtime":1616755486368,"results":"265","hashOfConfig":"142"},{"size":3459,"mtime":1617621707326,"results":"266","hashOfConfig":"142"},{"size":675,"mtime":1616998977848,"results":"267","hashOfConfig":"142"},{"size":4096,"mtime":1617636789647,"results":"268","hashOfConfig":"142"},{"size":26,"mtime":1616998977850,"results":"269","hashOfConfig":"142"},{"size":1570,"mtime":1617638223862,"results":"270","hashOfConfig":"142"},{"size":1430,"mtime":1617622348523,"results":"271","hashOfConfig":"142"},{"size":599,"mtime":1617175761100,"results":"272","hashOfConfig":"142"},{"size":707,"mtime":1617639078553,"results":"273","hashOfConfig":"142"},{"size":598,"mtime":1617175902496,"results":"274","hashOfConfig":"142"},{"size":656,"mtime":1617174896340,"results":"275","hashOfConfig":"142"},{"size":880,"mtime":1617625411125,"results":"276","hashOfConfig":"142"},{"size":227,"mtime":1617625063375,"results":"277","hashOfConfig":"142"},{"size":669,"mtime":1617636108872,"results":"278","hashOfConfig":"142"},{"size":931,"mtime":1617627422144,"results":"279","hashOfConfig":"142"},{"size":2914,"mtime":1617636196123,"results":"280","hashOfConfig":"142"},{"size":2033,"mtime":1617638932696,"results":"281","hashOfConfig":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},"1ud2c32",{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"284"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"284"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"351"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"351"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"284"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"284"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"351"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"284"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"351"},"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx",[],["569","570"],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\project\\reducers.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\inspectorReducer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\showInspectorReducer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\library\\reducers\\showLibraryReducer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\explorer\\reducers\\showExplorerReducer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\project\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx",["571","572"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useEffect, useState, MouseEvent } from \"react\";\r\nimport ReactFlow, {\r\n  removeElements,\r\n  addEdge,\r\n  Controls,\r\n  FlowElement,\r\n  Elements,\r\n  SnapGrid,\r\n  Connection,\r\n  Edge,\r\n  ArrowHeadType,\r\n} from \"react-flow-renderer\";\r\n\r\nimport DefaultSelectorNode from \"./selectorNodes/defaultSelectors/DefaultSelectorNode\";\r\nimport ConnectSelectorNode from \"./selectorNodes/connectSelectors/ConnectSelectorNode\";\r\nimport { Workspace } from \"../../models/workspace\";\r\nimport { WorkspaceService } from \"./../../services/workspaceService\";\r\nimport { DiagramAddNodes, DiagramAddConnections } from \"./\";\r\nimport DrawMiniMap from \"./DrawMiniMap\";\r\n\r\nlet clickTimeout = null;\r\n\r\n// const onLoad = (reactFlowInstance: OnLoadParams) => console.log('flow loaded:', reactFlowInstance);\r\n// const onNodeDragStop = (_: MouseEvent, node: Node) => console.log('drag stop', node);\r\n\r\nconst onElementClick = (e: MouseEvent, element: FlowElement) => {\r\n  if (clickTimeout !== null) {\r\n    clearTimeout(clickTimeout);\r\n    clickTimeout = null;\r\n  } else {\r\n    clickTimeout = setTimeout(() => {\r\n      clearTimeout(clickTimeout);\r\n      clickTimeout = null;\r\n    }, 2000);\r\n  }\r\n};\r\n\r\nconst connectionLineStyle = { stroke: \"#888\" };\r\nconst snapGrid: SnapGrid = [16, 16];\r\nconst nodeTypes = {\r\n  selectorNode: DefaultSelectorNode,\r\n  connectorNode: ConnectSelectorNode,\r\n};\r\n\r\nconst DiagramComponent: FC<Workspace> = ({\r\n  root,\r\n  aspects,\r\n  aspectDescriptors,\r\n}: Workspace) => {\r\n  const defaultZoomFactor = 1.5;\r\n  const [elements, setElements] = useState<Elements>([]);\r\n  const service = new WorkspaceService({ root, aspects, aspectDescriptors });\r\n\r\n  useEffect(() => {\r\n    setElements((els) =>\r\n      els.map((e) => {\r\n        return e;\r\n      })\r\n    );\r\n\r\n    const initialElements: Elements = [];\r\n    const diagram = service.getDiagram(\"root\");\r\n\r\n    DiagramAddNodes(diagram, initialElements);\r\n    DiagramAddConnections(diagram, initialElements, ArrowHeadType);\r\n\r\n    setElements(initialElements);\r\n  }, []);\r\n\r\n  const onElementsRemove = (elementsToRemove: Elements) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onConnect = (params: Connection | Edge) =>\r\n    setElements((els) => {\r\n      const node = service.functionalNodeMap.get(\r\n        service.functionalEdgeMap.get(params.sourceHandle)?.from\r\n      );\r\n      return addEdge(\r\n        {\r\n          ...params,\r\n          animated: true,\r\n          arrowHeadType: ArrowHeadType.ArrowClosed,\r\n          label: node.label,\r\n          style: { stroke: \"#888\" },\r\n        },\r\n        els\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <ReactFlow\r\n        elements={elements}\r\n        onElementClick={onElementClick}\r\n        onElementsRemove={onElementsRemove}\r\n        onConnect={onConnect}\r\n        nodeTypes={nodeTypes}\r\n        connectionLineStyle={connectionLineStyle}\r\n        snapToGrid={true}\r\n        snapGrid={snapGrid}\r\n        defaultZoom={defaultZoomFactor}\r\n      >\r\n        {/* {DrawMiniMap()} */}\r\n        <hr className=\"divider divider--left\" />\r\n        <hr className=\"divider divider--right\" />\r\n        {/* <Controls /> */}\r\n      </ReactFlow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagramComponent;\r\n","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx",["573","574","575","576","577","578"],"import { AspectInfo, AspectDropdown } from \"./aspect\";\r\nimport { WorkspaceService } from \"../../services\";\r\nimport DnDFlow from \"./flow/dragAndDrop\";\r\nimport { FlowTree } from '../flow';\r\nimport {\r\n  AspectDescriptor,\r\n  Aspects,\r\n  Root,\r\n  Workspace,\r\n} from \"../../models/workspace\";\r\n\r\ninterface Props extends Workspace {\r\n  aspectDescriptors: AspectDescriptor[];\r\n  root: Root;\r\n  aspects: Aspects[];\r\n}\r\n\r\nconst TreeviewBody = ({ aspectDescriptors, root, aspects }: Props) => {\r\n  const service = new WorkspaceService({ root, aspects, aspectDescriptors });\r\n  const fcat = service.getFunctionalAspectCategories();\r\n  const pcat = service.getProductAspectCategories();\r\n  const acat = service.getAreaAspectCategories();\r\n  // const fgraph = service.getNodesConnectedToRoot('1');\r\n\r\n  return (\r\n    <>\r\n      <FlowTree />\r\n    </>\r\n\r\n    /***  ORIGINAL DROPDOWNS ***/\r\n    // <div className=\"aspects_container\">\r\n    //   {aspectDescriptors.map((aspect) => (\r\n    //     <div key={aspect.id} className=\"aspect_container\">\r\n    //       <AspectInfo id={aspect.id} name={aspect.name} />\r\n    //       <AspectDropdown\r\n    //         id={aspect.id}\r\n    //         functional={fcat}\r\n    //         product={pcat}\r\n    //         location={acat}\r\n    //       />\r\n    //       <div className=\"aspect_view\"></div>\r\n    //     </div>\r\n    //   ))}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default TreeviewBody;\r\n","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectInfo.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectDropdown.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js",[],["579","580"],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts",["581","582","583","584"],"import {\r\n  Workspace,\r\n  Node,\r\n  Edge,\r\n  Aspects,\r\n  Graph,\r\n  CategoryDescriptor,\r\n  AspectDescriptor,\r\n  Connection,\r\n} from \"../models/workspace\";\r\nimport {\r\n  Diagram,\r\n  DiagramNode,\r\n  DiagramConnector,\r\n  DiagramConnectorType,\r\n  DiagramConnectionType,\r\n  DiagramConnection,\r\n  DIAGRAM_CONNECTOR_TYPE,\r\n  DIAGRAM_CONNECTION_TYPE,\r\n} from \"./../models/diagram\";\r\nimport { AspectRatioSharp } from \"@material-ui/icons\";\r\nimport { brotliDecompress } from \"zlib\";\r\n// import { nodetypeReducer } from \"../redux/store/library/reducers\";\r\n\r\nexport class WorkspaceService {\r\n  private workspace: Workspace;\r\n  functionalNodeMap: Map<string, Node>;\r\n  productNodeMap: Map<string, Node>;\r\n  functionalEdgeMap: Map<string, Edge>;\r\n  productEdgeMap: Map<string, Edge>;\r\n\r\n  proxyNodeMap: Map<string, Node>;\r\n  proxyEdgeMap: Map<string, Edge>;\r\n\r\n  constructor(workspace: Workspace) {\r\n    this.workspace = workspace;\r\n    this.functionalNodeMap = this.createNodeMap(\"1\", \"1\");\r\n    this.productNodeMap = this.createNodeMap(\"2\", \"1\");\r\n    this.functionalEdgeMap = this.createEdgeMap(\"1\", \"1\");\r\n    this.productEdgeMap = this.createEdgeMap(\"2\", \"1\");\r\n    this.proxyNodeMap = new Map<string, Node>();\r\n    this.proxyEdgeMap = new Map<string, Edge>();\r\n  }\r\n\r\n  createNodeMap(aspect: string, category: string): Map<string, Node> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Node>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.nodes.map((obj) => [obj.id, obj] as [string, Node])\r\n    );\r\n  }\r\n\r\n  createEdgeMap(aspect: string, category: string): Map<string, Edge> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Edge>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.edges.map((obj) => [obj.id, obj] as [string, Edge])\r\n    );\r\n  }\r\n\r\n  getProductLabel(nodeId: string): string {\r\n    var actualProductnode = this.productNodeMap.get(nodeId);\r\n    if (actualProductnode) {\r\n      return actualProductnode.label;\r\n    }\r\n\r\n    const actualNode = this.functionalNodeMap.get(nodeId);\r\n\r\n    if (!actualNode) return \"\";\r\n\r\n    // TODO: Use Typeregister\r\n    if (actualNode.type === \"imft:Reservoir\") return \"Reservoir\";\r\n  }\r\n\r\n  getRootEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        !node.type.toLowerCase().includes(\"input\") &&\r\n        !node.type.toLowerCase().includes(\"output\")\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getConnectorEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        (node.type.toLowerCase().includes(\"input\") ||\r\n          node.type.toLowerCase().includes(\"output\"))\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getFunctionalAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"1\");\r\n  }\r\n\r\n  getProductAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"2\");\r\n  }\r\n\r\n  getAreaAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"3\");\r\n  }\r\n\r\n  getFunctionalAspectCategories(): CategoryDescriptor[] {\r\n    let functionalCategories: CategoryDescriptor[] = [];\r\n    const fAspect = this.getFunctionalAspect();\r\n    fAspect.forEach((aspect) => {\r\n      functionalCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return functionalCategories;\r\n  }\r\n\r\n  getProductAspectCategories(): CategoryDescriptor[] {\r\n    let productCategories: CategoryDescriptor[] = [];\r\n    const pAspect = this.getProductAspect();\r\n    pAspect.forEach((aspect) => {\r\n      productCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return productCategories;\r\n  }\r\n\r\n  getAreaAspectCategories(): CategoryDescriptor[] {\r\n    let areaCategories: CategoryDescriptor[] = [];\r\n    const aAspect = this.getAreaAspect();\r\n    aAspect.forEach((aspect) => {\r\n      areaCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    if (!areaCategories || areaCategories.length <= 0) {\r\n      areaCategories.push({\r\n        id: null,\r\n        name: \"default\",\r\n        description: \"\",\r\n      });\r\n    }\r\n    return areaCategories;\r\n  }\r\n\r\n  // getNodesConnectedToRoot(aspectId: string): Node[] {\r\n  //     const aspectEdges: Edge[] = [];\r\n  //     const aspectNodes: Node[] = [];\r\n  //     const chosenAspect = this.workspace.aspects\r\n  // \t.filter(x => x.aspect === aspectId);\r\n\r\n  // \tchosenAspect.forEach(aspect => {\r\n  // \t\tif(aspect.graph.edges.filter(e => e.to === 'root' && e.type === 'imfo:partOf')){\r\n  // \t\t\taspectEdges.push({\r\n  // \t\t\t\tid: e.id;\r\n  // \t\t\t});\r\n  // \t\t}\r\n  // \t})\r\n\r\n  getConnectionEdges(nodeId: string): Connection[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type !== \"imfo:partOf\"\r\n    );\r\n    let filteredConnections: Connection[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      if (edge) {\r\n        var parent = aspects[0].graph.edges.filter(\r\n          (x) => x.from === edge.from && x.type === \"imfo:partOf\"\r\n        );\r\n\r\n        if (parent && parent.length > 0) {\r\n          filteredConnections.push({\r\n            id: edge.id,\r\n            type: edge.type,\r\n            from: parent[0].to,\r\n            to: edge.to,\r\n            connector: parent[0].id,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return filteredConnections;\r\n  }\r\n\r\n  getDiagram(nodeId: string): Diagram {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return null;\r\n\r\n    var diagram = new Diagram(\r\n      nodeId,\r\n      this.productNodeMap.get(nodeId)?.label ??\r\n        this.functionalNodeMap.get(nodeId)?.label ??\r\n        this.workspace.root.title\r\n    );\r\n    const nodeEdges = aspects[0].graph.edges.filter(\r\n      (x) =>\r\n        x.to === nodeId &&\r\n        x.type === \"imfo:partOf\" &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\") &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"output\")\r\n    );\r\n\r\n    diagram.nodes = nodeEdges.map((x) => {\r\n      const node = this.functionalNodeMap.get(x.from);\r\n      const label = this.productNodeMap.get(node.id)?.label ?? node.type;\r\n      const diagramNode = new DiagramNode(node.id, label);\r\n      diagramNode.connectors = this.getConnectors(node.id, aspects[0]);\r\n\r\n      diagram.connections = diagram.connections.concat(\r\n        this.getConnections(node.id, aspects[0], diagramNode.connectors)\r\n      );\r\n\r\n      return diagramNode;\r\n    });\r\n    return diagram;\r\n  }\r\n\r\n  getConnectors(nodeId: string, aspects: Aspects): DiagramConnector[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    const connectors = aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          x.type === \"imfo:partOf\" &&\r\n          (this.functionalNodeMap\r\n            .get(x.from)\r\n            .type.toLowerCase()\r\n            .includes(\"input\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"output\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"supply\"))\r\n      )\r\n      .map((x) => {\r\n        const diagramType = this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\")\r\n          ? (DIAGRAM_CONNECTOR_TYPE.TARGET as DiagramConnectorType)\r\n          : (DIAGRAM_CONNECTOR_TYPE.SOURCE as DiagramConnectorType);\r\n        const label = this.functionalNodeMap.get(x.from)?.type ?? x.type;\r\n        return new DiagramConnector(x.id, label, diagramType);\r\n      });\r\n    return connectors;\r\n  }\r\n\r\n  getConnections(\r\n    nodeId: string,\r\n    aspects: Aspects,\r\n    connectors: DiagramConnector[]\r\n  ): DiagramConnection[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    return aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          Object.values(DIAGRAM_CONNECTION_TYPE).includes(x.type)\r\n      )\r\n      .map((x) => {\r\n        const sourceParentEdge = aspects.graph.edges.filter(\r\n          (e) => e.from === \"n2\" && e.type === \"imfo:partOf\"\r\n        )[0];\r\n        const targetConnector = connectors.filter(\r\n          (x) => x.type === DIAGRAM_CONNECTOR_TYPE.TARGET\r\n        )[0];\r\n        // TODO: This values must be dynamic\r\n        return new DiagramConnection(\r\n          x.id,\r\n          x.type,\r\n          sourceParentEdge.to,\r\n          \"e2\",\r\n          \"n4\",\r\n          targetConnector.id,\r\n          x.type as DiagramConnectionType\r\n        );\r\n      });\r\n  }\r\n\r\n  guid(): string {\r\n    function _p8(s: boolean) {\r\n      var p = (Math.random().toString(16) + \"000000000\").substr(2, 8);\r\n      return s ? \"-\" + p.substr(0, 4) + \"-\" + p.substr(4, 4) : p;\r\n    }\r\n    return _p8(false) + _p8(true) + _p8(true) + _p8(false);\r\n  }\r\n\r\n  getProxyNodes(aspect: Aspects) {\r\n    if (\r\n      !aspect &&\r\n      !aspect.graph &&\r\n      !aspect.graph.edges &&\r\n      aspect.graph.edges.length <= 0\r\n    )\r\n      return;\r\n\r\n    aspect.graph.nodes\r\n      .filter(\r\n        (x) =>\r\n          !x.type.toLowerCase().includes(\"input\") &&\r\n          !x.type.toLowerCase().includes(\"output\") &&\r\n          !x.type.toLowerCase().includes(\"pipeline\")\r\n      )\r\n      .forEach((n) => {\r\n        const sourceNodeId = this.guid();\r\n        const targetNodeId = this.guid();\r\n\r\n        aspect.graph.nodes.push({\r\n          id: sourceNodeId,\r\n          type: \"imfo:SupplyOutput\",\r\n          label: \"Supply output\",\r\n        });\r\n        aspect.graph.nodes.push({\r\n          id: targetNodeId,\r\n          type: \"imfo:SupplyInput\",\r\n          label: \"Supply input\",\r\n        });\r\n\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: sourceNodeId,\r\n          to: n.id,\r\n        });\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: targetNodeId,\r\n          to: n.id,\r\n        });\r\n      });\r\n  }\r\n}\r\n","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\helpers\\SaveViewState.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\localStorage\\localStorage.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\ExplorerModule.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\LibraryModule.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorHeader.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorModule.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\SwitchWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\utils.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\IconsWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\VisualIconWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\edges\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\edges\\DefaultEdgeType.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeader.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\CollapsedIcon.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerTitle.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\AspectWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\FacilityHeader.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentParagraph.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentInput.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\InspectorTitle.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\IconWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentContainer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentColumn.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentDataWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeaderWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleExplorerButton.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleLibraryButton.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleInspectorButton.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ContentWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerContainer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\HeaderWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\IconWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\CollapsedIcon.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\LibraryContainer.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchIconWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchBox.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\ContentWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\TextWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\IconWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SidebarWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\HeaderWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\Header.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\project\\actions.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TreeviewWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\BlockviewWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TitleWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TextWrapper.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facilityComponent\\FacilityComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\helpers\\GetProjectData.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeInspector.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\aspectComponent\\AspectComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\checkboxComponent\\CheckboxComponent.tsx",["585"],"import react, { useState } from \"react\";\r\nimport \"./checkbox.scss\";\r\ninterface CheckboxComponentProps {\r\n  id: string;\r\n  inputLabel: string;\r\n  checked?: boolean;\r\n}\r\n\r\nexport const CheckboxComponent = ({\r\n  id,\r\n  inputLabel,\r\n  checked,\r\n}: CheckboxComponentProps) => {\r\n  const [isChecked, setChecked] = useState(false);\r\n  const handleCheckboxChange = (event) => {\r\n    setChecked(!isChecked);\r\n  };\r\n  return (\r\n    <label className=\"checkbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={handleCheckboxChange}\r\n      />\r\n      <span className=\"checkmark\"></span>\r\n      <label className=\"checkbox_label\">{inputLabel}</label>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CheckboxComponent;\r\n","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facetComponent\\FacetComponent.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\project\\saga.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\ProjectDataset.js",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\FlowTree.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\project\\index.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\models\\project\\project.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Aspect.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Function.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Product.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\nodes\\Location.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\flow\\MiniMapComponent.tsx",["586"],"import { MiniMap, Node } from \"react-flow-renderer\";\r\n\r\nconst MiniMapComponent = () => {\r\n  let color: string;\r\n\r\n  return (\r\n    <MiniMap\r\n      nodeStrokeColor={(node: Node): string => {\r\n        return node.type === \"input\"\r\n          ? (color = \"#00041d0\")\r\n          : node.type === \"selectorNode\"\r\n          ? (color = \"#ccc\")\r\n          : node.type === \"output\"\r\n          ? (color = \"#ff0072\")\r\n          : (color = \"#eee\");\r\n      }}\r\n      nodeColor={(node: Node): string => {\r\n        return node.type === \"selectorNode\"\r\n          ? (color = \"#ccc\")\r\n          : (color = \"#888\");\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MiniMapComponent;","C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\library\\reducers.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\library\\actions.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\library\\types.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\library\\saga.ts",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\flow\\dragAndDrop\\Sidebar.tsx",[],"C:\\git\\ti-spine-modelbuilder\\src\\client\\src\\data\\LibraryDataset.js",[],{"ruleId":"587","replacedBy":"588"},{"ruleId":"589","replacedBy":"590"},{"ruleId":"591","severity":1,"message":"592","line":6,"column":3,"nodeType":"593","messageId":"594","endLine":6,"endColumn":11},{"ruleId":"591","severity":1,"message":"595","line":20,"column":8,"nodeType":"593","messageId":"594","endLine":20,"endColumn":19},{"ruleId":"591","severity":1,"message":"596","line":1,"column":10,"nodeType":"593","messageId":"594","endLine":1,"endColumn":20},{"ruleId":"591","severity":1,"message":"597","line":1,"column":22,"nodeType":"593","messageId":"594","endLine":1,"endColumn":36},{"ruleId":"591","severity":1,"message":"598","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":15},{"ruleId":"591","severity":1,"message":"599","line":20,"column":9,"nodeType":"593","messageId":"594","endLine":20,"endColumn":13},{"ruleId":"591","severity":1,"message":"600","line":21,"column":9,"nodeType":"593","messageId":"594","endLine":21,"endColumn":13},{"ruleId":"591","severity":1,"message":"601","line":22,"column":9,"nodeType":"593","messageId":"594","endLine":22,"endColumn":13},{"ruleId":"587","replacedBy":"588"},{"ruleId":"589","replacedBy":"590"},{"ruleId":"591","severity":1,"message":"602","line":6,"column":3,"nodeType":"593","messageId":"594","endLine":6,"endColumn":8},{"ruleId":"591","severity":1,"message":"603","line":8,"column":3,"nodeType":"593","messageId":"594","endLine":8,"endColumn":19},{"ruleId":"591","severity":1,"message":"604","line":21,"column":10,"nodeType":"593","messageId":"594","endLine":21,"endColumn":26},{"ruleId":"591","severity":1,"message":"605","line":22,"column":10,"nodeType":"593","messageId":"594","endLine":22,"endColumn":26},{"ruleId":"591","severity":1,"message":"606","line":1,"column":8,"nodeType":"593","messageId":"594","endLine":1,"endColumn":13},{"ruleId":"591","severity":1,"message":"607","line":20,"column":14,"nodeType":"593","messageId":"594","endLine":20,"endColumn":19},"no-native-reassign",["608"],"no-negated-in-lhs",["609"],"@typescript-eslint/no-unused-vars","'Controls' is defined but never used.","Identifier","unusedVar","'DrawMiniMap' is defined but never used.","'AspectInfo' is defined but never used.","'AspectDropdown' is defined but never used.","'DnDFlow' is defined but never used.","'fcat' is assigned a value but never used.","'pcat' is assigned a value but never used.","'acat' is assigned a value but never used.","'Graph' is defined but never used.","'AspectDescriptor' is defined but never used.","'AspectRatioSharp' is defined but never used.","'brotliDecompress' is defined but never used.","'react' is defined but never used.","'color' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx":"1","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts":"2","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts":"3","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts":"4","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts":"5","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts":"6","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts":"7","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts":"8","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts":"9","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx":"10","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx":"11","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx":"12","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx":"13","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx":"14","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx":"15","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx":"16","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx":"17","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts":"18","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts":"19","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts":"20","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts":"21","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js":"22","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js":"23","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js":"24","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts":"25","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts":"26","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\index.ts":"27","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts":"28","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\reducers.ts":"29","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts":"30","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts":"31","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\inspectorReducer.tsx":"32","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\showInspectorReducer.tsx":"33","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts":"34","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\types.ts":"35","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts":"36","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts":"37","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts":"38","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts":"39","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\nodetype\\saga.ts":"40","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx":"41","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx":"42","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx":"43","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx":"44","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectDropdown.tsx":"45","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectInfo.tsx":"46","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts":"47","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\actions.ts":"48","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx":"49","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx":"50","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx":"51","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts":"52","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx":"53","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx":"54","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx":"55","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts":"56","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorHeader.tsx":"57","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx":"58","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts":"59","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeader.ts":"60","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeaderWrapper.tsx":"61","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentDataWrapper.tsx":"62","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts":"63","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts":"64","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx":"65","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx":"66","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx":"67","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts":"68","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx":"69","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx":"70","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx":"71","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DrawMiniMap.tsx":"72","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\index.ts":"73","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\library\\reducers\\showLibraryReducer.tsx":"74","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorModule.tsx":"75","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\LibraryModule.tsx":"76","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\IconWrapper.tsx":"77","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\animated\\AnimatedMenu.tsx":"78","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\index.ts":"79","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\Header.tsx":"80","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\index.ts":"81","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleInspectorButton.tsx":"82","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleLibraryButton.tsx":"83","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SidebarWrapper.tsx":"84","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\IconWrapper.tsx":"85","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\TextWrapper.tsx":"86","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\ContentWrapper.tsx":"87","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchBox.tsx":"88","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchIconWrapper.tsx":"89","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\index.ts":"90","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facilityComponent\\FacilityComponent.tsx":"91","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\checkboxComponent\\CheckboxComponent.tsx":"92","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\aspectComponent\\AspectComponent.tsx":"93","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facetComponent\\FacetComponent.tsx":"94","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\explorer\\reducers\\showExplorerReducer.tsx":"95","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleExplorerButton.tsx":"96","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\ExplorerModule.tsx":"97","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\LibraryContainer.tsx":"98","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\HeaderWrapper.tsx":"99","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\index.ts":"100","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\animated\\AnimatedMenu.tsx":"101","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\BlockviewWrapper.tsx":"102","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TreeviewWrapper.tsx":"103","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\index.ts":"104","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerContainer.tsx":"105","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ContentWrapper.tsx":"106","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\FacilityHeader.tsx":"107","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\HeaderWrapper.tsx":"108","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\AspectWrapper.tsx":"109","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\localStorage\\localStorage.tsx":"110","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentColumn.tsx":"111","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentContainer.tsx":"112","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentInput.tsx":"113","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentParagraph.tsx":"114","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\InspectorTitle.tsx":"115","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\IconWrapper.tsx":"116","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerTitle.tsx":"117","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\localStorage\\LocalStorage.tsx":"118","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\CollapsedIcon.tsx":"119","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\CollapsedIcon.tsx":"120","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TitleWrapper.tsx":"121","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TextWrapper.tsx":"122","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\VisualIconWrapper.tsx":"123","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\SwitchWrapper.tsx":"124","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\IconsWrapper.tsx":"125","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\helpers\\SaveViewState.tsx":"126","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ViewOptionWrapper.tsx":"127","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\SwitchViewWrapper.tsx":"128","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\FooterWrapper.tsx":"129","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\switchviewComponent\\SwitchViewComponent.tsx":"130","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\flow\\dragAndDrop\\Sidebar.js":"131","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\helpers\\GetProjectData.tsx":"132","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx":"133","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\flow\\dragAndDrop\\index.js":"134","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeInspector.tsx":"135"},{"size":511,"mtime":1616658262557,"results":"136","hashOfConfig":"137"},{"size":367,"mtime":1616658262434,"results":"138","hashOfConfig":"137"},{"size":56,"mtime":1616658262387,"results":"139","hashOfConfig":"137"},{"size":58,"mtime":1615384119007,"results":"140","hashOfConfig":"137"},{"size":73,"mtime":1615384119013,"results":"141","hashOfConfig":"137"},{"size":131,"mtime":1615384119010,"results":"142","hashOfConfig":"137"},{"size":329,"mtime":1616658262530,"results":"143","hashOfConfig":"137"},{"size":63,"mtime":1615384119006,"results":"144","hashOfConfig":"137"},{"size":215,"mtime":1616658262426,"results":"145","hashOfConfig":"137"},{"size":333,"mtime":1616658262386,"results":"146","hashOfConfig":"137"},{"size":589,"mtime":1616658262526,"results":"147","hashOfConfig":"137"},{"size":2307,"mtime":1617005951249,"results":"148","hashOfConfig":"137"},{"size":354,"mtime":1616658262510,"results":"149","hashOfConfig":"137"},{"size":476,"mtime":1616658262506,"results":"150","hashOfConfig":"137"},{"size":2095,"mtime":1617005951232,"results":"151","hashOfConfig":"137"},{"size":983,"mtime":1616658262507,"results":"152","hashOfConfig":"137"},{"size":3263,"mtime":1616658262399,"results":"153","hashOfConfig":"137"},{"size":11954,"mtime":1616658262624,"results":"154","hashOfConfig":"137"},{"size":56,"mtime":1616658262623,"results":"155","hashOfConfig":"137"},{"size":1201,"mtime":1617542177186,"results":"156","hashOfConfig":"137"},{"size":26,"mtime":1616658262554,"results":"157","hashOfConfig":"137"},{"size":7908,"mtime":1616658262529,"results":"158","hashOfConfig":"137"},{"size":723,"mtime":1616658262545,"results":"159","hashOfConfig":"137"},{"size":330,"mtime":1616658262542,"results":"160","hashOfConfig":"137"},{"size":24,"mtime":1615384119031,"results":"161","hashOfConfig":"137"},{"size":284,"mtime":1616658262551,"results":"162","hashOfConfig":"137"},{"size":118,"mtime":1616630247686,"results":"163","hashOfConfig":"137"},{"size":1348,"mtime":1617542177220,"results":"164","hashOfConfig":"137"},{"size":773,"mtime":1616658262587,"results":"165","hashOfConfig":"137"},{"size":824,"mtime":1616658262598,"results":"166","hashOfConfig":"137"},{"size":747,"mtime":1616658262604,"results":"167","hashOfConfig":"137"},{"size":900,"mtime":1617015092457,"results":"168","hashOfConfig":"137"},{"size":596,"mtime":1617542177217,"results":"169","hashOfConfig":"137"},{"size":692,"mtime":1616658262604,"results":"170","hashOfConfig":"137"},{"size":752,"mtime":1616658262596,"results":"171","hashOfConfig":"137"},{"size":716,"mtime":1616658262610,"results":"172","hashOfConfig":"137"},{"size":578,"mtime":1616658262578,"results":"173","hashOfConfig":"137"},{"size":1136,"mtime":1616658262589,"results":"174","hashOfConfig":"137"},{"size":1409,"mtime":1616658262591,"results":"175","hashOfConfig":"137"},{"size":1009,"mtime":1616658262595,"results":"176","hashOfConfig":"137"},{"size":572,"mtime":1616658262394,"results":"177","hashOfConfig":"137"},{"size":516,"mtime":1616658262391,"results":"178","hashOfConfig":"137"},{"size":187,"mtime":1616658262540,"results":"179","hashOfConfig":"137"},{"size":1367,"mtime":1617542177208,"results":"180","hashOfConfig":"137"},{"size":1121,"mtime":1617005951282,"results":"181","hashOfConfig":"137"},{"size":506,"mtime":1616744093316,"results":"182","hashOfConfig":"137"},{"size":342,"mtime":1616658262607,"results":"183","hashOfConfig":"137"},{"size":342,"mtime":1616658262585,"results":"184","hashOfConfig":"137"},{"size":808,"mtime":1617542177221,"results":"185","hashOfConfig":"137"},{"size":888,"mtime":1616658262412,"results":"186","hashOfConfig":"137"},{"size":528,"mtime":1616658262406,"results":"187","hashOfConfig":"137"},{"size":130,"mtime":1616696971210,"results":"188","hashOfConfig":"137"},{"size":676,"mtime":1616658262418,"results":"189","hashOfConfig":"137"},{"size":614,"mtime":1616658262420,"results":"190","hashOfConfig":"137"},{"size":673,"mtime":1616658262422,"results":"191","hashOfConfig":"137"},{"size":2558,"mtime":1616658262563,"results":"192","hashOfConfig":"137"},{"size":342,"mtime":1617005951263,"results":"193","hashOfConfig":"137"},{"size":534,"mtime":1617005951272,"results":"194","hashOfConfig":"137"},{"size":475,"mtime":1617005951268,"results":"195","hashOfConfig":"137"},{"size":1053,"mtime":1616696971204,"results":"196","hashOfConfig":"137"},{"size":333,"mtime":1616696971205,"results":"197","hashOfConfig":"137"},{"size":309,"mtime":1616696971203,"results":"198","hashOfConfig":"137"},{"size":124,"mtime":1616658262466,"results":"199","hashOfConfig":"137"},{"size":203,"mtime":1617005951273,"results":"200","hashOfConfig":"137"},{"size":816,"mtime":1617005951264,"results":"201","hashOfConfig":"137"},{"size":1138,"mtime":1617542177202,"results":"202","hashOfConfig":"137"},{"size":287,"mtime":1616744093307,"results":"203","hashOfConfig":"137"},{"size":179,"mtime":1616658262440,"results":"204","hashOfConfig":"137"},{"size":3342,"mtime":1616658262446,"results":"205","hashOfConfig":"137"},{"size":191,"mtime":1616658262475,"results":"206","hashOfConfig":"137"},{"size":477,"mtime":1616658262449,"results":"207","hashOfConfig":"137"},{"size":648,"mtime":1616658262405,"results":"208","hashOfConfig":"137"},{"size":61,"mtime":1616696971218,"results":"209","hashOfConfig":"137"},{"size":580,"mtime":1617542177219,"results":"210","hashOfConfig":"137"},{"size":1585,"mtime":1617005951263,"results":"211","hashOfConfig":"137"},{"size":1534,"mtime":1617542177205,"results":"212","hashOfConfig":"137"},{"size":171,"mtime":1617005951269,"results":"213","hashOfConfig":"137"},{"size":517,"mtime":1617005951279,"results":"214","hashOfConfig":"137"},{"size":598,"mtime":1617005951280,"results":"215","hashOfConfig":"137"},{"size":254,"mtime":1617005951276,"results":"216","hashOfConfig":"137"},{"size":225,"mtime":1617005951223,"results":"217","hashOfConfig":"137"},{"size":970,"mtime":1617005951222,"results":"218","hashOfConfig":"137"},{"size":909,"mtime":1616698991574,"results":"219","hashOfConfig":"137"},{"size":408,"mtime":1617037883379,"results":"220","hashOfConfig":"137"},{"size":170,"mtime":1616744093310,"results":"221","hashOfConfig":"137"},{"size":193,"mtime":1616744093313,"results":"222","hashOfConfig":"137"},{"size":228,"mtime":1616744093309,"results":"223","hashOfConfig":"137"},{"size":283,"mtime":1616744093311,"results":"224","hashOfConfig":"137"},{"size":194,"mtime":1616744093312,"results":"225","hashOfConfig":"137"},{"size":90,"mtime":1617005951255,"results":"226","hashOfConfig":"137"},{"size":958,"mtime":1617542177195,"results":"227","hashOfConfig":"137"},{"size":1008,"mtime":1617542177191,"results":"228","hashOfConfig":"137"},{"size":2071,"mtime":1617542177188,"results":"229","hashOfConfig":"137"},{"size":447,"mtime":1617542177193,"results":"230","hashOfConfig":"137"},{"size":587,"mtime":1617542177214,"results":"231","hashOfConfig":"137"},{"size":915,"mtime":1617005951221,"results":"232","hashOfConfig":"137"},{"size":2018,"mtime":1617542177187,"results":"233","hashOfConfig":"137"},{"size":255,"mtime":1617005951278,"results":"234","hashOfConfig":"137"},{"size":191,"mtime":1617005951277,"results":"235","hashOfConfig":"137"},{"size":437,"mtime":1617005951248,"results":"236","hashOfConfig":"137"},{"size":532,"mtime":1617005951261,"results":"237","hashOfConfig":"137"},{"size":184,"mtime":1617005951234,"results":"238","hashOfConfig":"137"},{"size":184,"mtime":1617005951247,"results":"239","hashOfConfig":"137"},{"size":693,"mtime":1617037883376,"results":"240","hashOfConfig":"137"},{"size":322,"mtime":1617542177200,"results":"241","hashOfConfig":"137"},{"size":382,"mtime":1617545488580,"results":"242","hashOfConfig":"137"},{"size":140,"mtime":1617542177201,"results":"243","hashOfConfig":"137"},{"size":193,"mtime":1617005951260,"results":"244","hashOfConfig":"137"},{"size":181,"mtime":1617542177198,"results":"245","hashOfConfig":"137"},{"size":921,"mtime":1617005951291,"results":"246","hashOfConfig":"137"},{"size":183,"mtime":1617005951265,"results":"247","hashOfConfig":"137"},{"size":214,"mtime":1617005951266,"results":"248","hashOfConfig":"137"},{"size":238,"mtime":1617005951267,"results":"249","hashOfConfig":"137"},{"size":156,"mtime":1617005951267,"results":"250","hashOfConfig":"137"},{"size":196,"mtime":1617005951270,"results":"251","hashOfConfig":"137"},{"size":265,"mtime":1617005951260,"results":"252","hashOfConfig":"137"},{"size":201,"mtime":1617005951258,"results":"253","hashOfConfig":"137"},{"size":921,"mtime":1616863136537,"results":"254","hashOfConfig":"137"},{"size":292,"mtime":1617005951257,"results":"255","hashOfConfig":"137"},{"size":274,"mtime":1617005951275,"results":"256","hashOfConfig":"137"},{"size":210,"mtime":1617005951246,"results":"257","hashOfConfig":"137"},{"size":235,"mtime":1617005951246,"results":"258","hashOfConfig":"137"},{"size":207,"mtime":1617005951247,"results":"259","hashOfConfig":"137"},{"size":194,"mtime":1617005951245,"results":"260","hashOfConfig":"137"},{"size":177,"mtime":1617005951235,"results":"261","hashOfConfig":"137"},{"size":778,"mtime":1617005951233,"results":"262","hashOfConfig":"137"},{"size":483,"mtime":1617037883375,"results":"263","hashOfConfig":"137"},{"size":281,"mtime":1617037883375,"results":"264","hashOfConfig":"137"},{"size":610,"mtime":1617037883374,"results":"265","hashOfConfig":"137"},{"size":856,"mtime":1617037883377,"results":"266","hashOfConfig":"137"},{"size":1914,"mtime":1617542177209,"results":"267","hashOfConfig":"137"},{"size":860,"mtime":1617542177196,"results":"268","hashOfConfig":"137"},{"size":621,"mtime":1617542177203,"results":"269","hashOfConfig":"137"},{"size":2072,"mtime":1617542177211,"results":"270","hashOfConfig":"137"},{"size":396,"mtime":1617542177215,"results":"271","hashOfConfig":"137"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"127lrwc",{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"274"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"274"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"274"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"274"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"274"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx",[],["550","551"],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx",["552","553"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useEffect, useState, MouseEvent } from \"react\";\r\nimport ReactFlow, {\r\n  removeElements,\r\n  addEdge,\r\n  Controls,\r\n  FlowElement,\r\n  Elements,\r\n  SnapGrid,\r\n  Connection,\r\n  Edge,\r\n  ArrowHeadType,\r\n} from \"react-flow-renderer\";\r\n\r\nimport DefaultSelectorNode from \"./selectorNodes/defaultSelectors/DefaultSelectorNode\";\r\nimport ConnectSelectorNode from \"./selectorNodes/connectSelectors/ConnectSelectorNode\";\r\nimport { Workspace } from \"../../models/workspace\";\r\nimport { WorkspaceService } from \"./../../services/workspaceService\";\r\nimport { DiagramAddNodes, DiagramAddConnections } from \"./\";\r\nimport DrawMiniMap from \"./DrawMiniMap\";\r\n\r\nlet clickTimeout = null;\r\n\r\n// const onLoad = (reactFlowInstance: OnLoadParams) => console.log('flow loaded:', reactFlowInstance);\r\n// const onNodeDragStop = (_: MouseEvent, node: Node) => console.log('drag stop', node);\r\n\r\nconst onElementClick = (e: MouseEvent, element: FlowElement) => {\r\n  if (clickTimeout !== null) {\r\n    clearTimeout(clickTimeout);\r\n    clickTimeout = null;\r\n  } else {\r\n    clickTimeout = setTimeout(() => {\r\n      clearTimeout(clickTimeout);\r\n      clickTimeout = null;\r\n    }, 2000);\r\n  }\r\n};\r\n\r\nconst connectionLineStyle = { stroke: \"#888\" };\r\nconst snapGrid: SnapGrid = [16, 16];\r\nconst nodeTypes = {\r\n  selectorNode: DefaultSelectorNode,\r\n  connectorNode: ConnectSelectorNode,\r\n};\r\n\r\nconst DiagramComponent: FC<Workspace> = ({\r\n  root,\r\n  aspects,\r\n  aspectDescriptors,\r\n}: Workspace) => {\r\n  const defaultZoomFactor = 1.5;\r\n  const [elements, setElements] = useState<Elements>([]);\r\n  const service = new WorkspaceService({ root, aspects, aspectDescriptors });\r\n\r\n  useEffect(() => {\r\n    setElements((els) =>\r\n      els.map((e) => {\r\n        return e;\r\n      })\r\n    );\r\n\r\n    const initialElements: Elements = [];\r\n    const diagram = service.getDiagram(\"root\");\r\n\r\n    DiagramAddNodes(diagram, initialElements);\r\n    DiagramAddConnections(diagram, initialElements, ArrowHeadType);\r\n\r\n    setElements(initialElements);\r\n  }, []);\r\n\r\n  const onElementsRemove = (elementsToRemove: Elements) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onConnect = (params: Connection | Edge) =>\r\n    setElements((els) => {\r\n      const node = service.functionalNodeMap.get(\r\n        service.functionalEdgeMap.get(params.sourceHandle)?.from\r\n      );\r\n      return addEdge(\r\n        {\r\n          ...params,\r\n          animated: true,\r\n          arrowHeadType: ArrowHeadType.ArrowClosed,\r\n          label: node.label,\r\n          style: { stroke: \"#888\" },\r\n        },\r\n        els\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <ReactFlow\r\n        elements={elements}\r\n        onElementClick={onElementClick}\r\n        onElementsRemove={onElementsRemove}\r\n        onConnect={onConnect}\r\n        nodeTypes={nodeTypes}\r\n        connectionLineStyle={connectionLineStyle}\r\n        snapToGrid={true}\r\n        snapGrid={snapGrid}\r\n        defaultZoom={defaultZoomFactor}\r\n      >\r\n        {/* {DrawMiniMap()} */}\r\n        <hr className=\"divider divider--left\" />\r\n        <hr className=\"divider divider--right\" />\r\n        {/* <Controls /> */}\r\n      </ReactFlow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagramComponent;\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts",["554","555","556","557","558"],"import {\r\n  Workspace,\r\n  Node,\r\n  Edge,\r\n  Aspects,\r\n  Graph,\r\n  CategoryDescriptor,\r\n  AspectDescriptor,\r\n  Connection,\r\n} from \"../models/workspace\";\r\nimport {\r\n  Diagram,\r\n  DiagramNode,\r\n  DiagramConnector,\r\n  DiagramConnectorType,\r\n  DiagramConnectionType,\r\n  DiagramConnection,\r\n  DIAGRAM_CONNECTOR_TYPE,\r\n  DIAGRAM_CONNECTION_TYPE,\r\n} from \"./../models/diagram\";\r\nimport { AspectRatioSharp } from \"@material-ui/icons\";\r\nimport { brotliDecompress } from \"zlib\";\r\nimport { nodetypeReducer } from \"../redux/store/nodetypes/reducers\";\r\n\r\nexport class WorkspaceService {\r\n  private workspace: Workspace;\r\n  functionalNodeMap: Map<string, Node>;\r\n  productNodeMap: Map<string, Node>;\r\n  functionalEdgeMap: Map<string, Edge>;\r\n  productEdgeMap: Map<string, Edge>;\r\n\r\n  proxyNodeMap: Map<string, Node>;\r\n  proxyEdgeMap: Map<string, Edge>;\r\n\r\n  constructor(workspace: Workspace) {\r\n    this.workspace = workspace;\r\n    this.functionalNodeMap = this.createNodeMap(\"1\", \"1\");\r\n    this.productNodeMap = this.createNodeMap(\"2\", \"1\");\r\n    this.functionalEdgeMap = this.createEdgeMap(\"1\", \"1\");\r\n    this.productEdgeMap = this.createEdgeMap(\"2\", \"1\");\r\n    this.proxyNodeMap = new Map<string, Node>();\r\n    this.proxyEdgeMap = new Map<string, Edge>();\r\n  }\r\n\r\n  createNodeMap(aspect: string, category: string): Map<string, Node> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Node>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.nodes.map((obj) => [obj.id, obj] as [string, Node])\r\n    );\r\n  }\r\n\r\n  createEdgeMap(aspect: string, category: string): Map<string, Edge> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Edge>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.edges.map((obj) => [obj.id, obj] as [string, Edge])\r\n    );\r\n  }\r\n\r\n  getProductLabel(nodeId: string): string {\r\n    var actualProductnode = this.productNodeMap.get(nodeId);\r\n    if (actualProductnode) {\r\n      return actualProductnode.label;\r\n    }\r\n\r\n    const actualNode = this.functionalNodeMap.get(nodeId);\r\n\r\n    if (!actualNode) return \"\";\r\n\r\n    // TODO: Use Typeregister\r\n    if (actualNode.type === \"imft:Reservoir\") return \"Reservoir\";\r\n  }\r\n\r\n  getRootEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        !node.type.toLowerCase().includes(\"input\") &&\r\n        !node.type.toLowerCase().includes(\"output\")\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getConnectorEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        (node.type.toLowerCase().includes(\"input\") ||\r\n          node.type.toLowerCase().includes(\"output\"))\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getFunctionalAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"1\");\r\n  }\r\n\r\n  getProductAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"2\");\r\n  }\r\n\r\n  getAreaAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"3\");\r\n  }\r\n\r\n  getFunctionalAspectCategories(): CategoryDescriptor[] {\r\n    let functionalCategories: CategoryDescriptor[] = [];\r\n    const fAspect = this.getFunctionalAspect();\r\n    fAspect.forEach((aspect) => {\r\n      functionalCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return functionalCategories;\r\n  }\r\n\r\n  getProductAspectCategories(): CategoryDescriptor[] {\r\n    let productCategories: CategoryDescriptor[] = [];\r\n    const pAspect = this.getProductAspect();\r\n    pAspect.forEach((aspect) => {\r\n      productCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return productCategories;\r\n  }\r\n\r\n  getAreaAspectCategories(): CategoryDescriptor[] {\r\n    let areaCategories: CategoryDescriptor[] = [];\r\n    const aAspect = this.getAreaAspect();\r\n    aAspect.forEach((aspect) => {\r\n      areaCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    if (!areaCategories || areaCategories.length <= 0) {\r\n      areaCategories.push({\r\n        id: null,\r\n        name: \"default\",\r\n        description: \"\",\r\n      });\r\n    }\r\n    return areaCategories;\r\n  }\r\n\r\n  // getNodesConnectedToRoot(aspectId: string): Node[] {\r\n  //     const aspectEdges: Edge[] = [];\r\n  //     const aspectNodes: Node[] = [];\r\n  //     const chosenAspect = this.workspace.aspects\r\n  // \t.filter(x => x.aspect === aspectId);\r\n\r\n  // \tchosenAspect.forEach(aspect => {\r\n  // \t\tif(aspect.graph.edges.filter(e => e.to === 'root' && e.type === 'imfo:partOf')){\r\n  // \t\t\taspectEdges.push({\r\n  // \t\t\t\tid: e.id;\r\n  // \t\t\t});\r\n  // \t\t}\r\n  // \t})\r\n\r\n  getConnectionEdges(nodeId: string): Connection[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type !== \"imfo:partOf\"\r\n    );\r\n    let filteredConnections: Connection[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      if (edge) {\r\n        var parent = aspects[0].graph.edges.filter(\r\n          (x) => x.from === edge.from && x.type === \"imfo:partOf\"\r\n        );\r\n\r\n        if (parent && parent.length > 0) {\r\n          filteredConnections.push({\r\n            id: edge.id,\r\n            type: edge.type,\r\n            from: parent[0].to,\r\n            to: edge.to,\r\n            connector: parent[0].id,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return filteredConnections;\r\n  }\r\n\r\n  getDiagram(nodeId: string): Diagram {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return null;\r\n\r\n    var diagram = new Diagram(\r\n      nodeId,\r\n      this.productNodeMap.get(nodeId)?.label ??\r\n        this.functionalNodeMap.get(nodeId)?.label ??\r\n        this.workspace.root.title\r\n    );\r\n    const nodeEdges = aspects[0].graph.edges.filter(\r\n      (x) =>\r\n        x.to === nodeId &&\r\n        x.type === \"imfo:partOf\" &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\") &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"output\")\r\n    );\r\n\r\n    diagram.nodes = nodeEdges.map((x) => {\r\n      const node = this.functionalNodeMap.get(x.from);\r\n      const label = this.productNodeMap.get(node.id)?.label ?? node.type;\r\n      const diagramNode = new DiagramNode(node.id, label);\r\n      diagramNode.connectors = this.getConnectors(node.id, aspects[0]);\r\n\r\n      diagram.connections = diagram.connections.concat(\r\n        this.getConnections(node.id, aspects[0], diagramNode.connectors)\r\n      );\r\n\r\n      return diagramNode;\r\n    });\r\n    return diagram;\r\n  }\r\n\r\n  getConnectors(nodeId: string, aspects: Aspects): DiagramConnector[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    const connectors = aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          x.type === \"imfo:partOf\" &&\r\n          (this.functionalNodeMap\r\n            .get(x.from)\r\n            .type.toLowerCase()\r\n            .includes(\"input\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"output\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"supply\"))\r\n      )\r\n      .map((x) => {\r\n        const diagramType = this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\")\r\n          ? (DIAGRAM_CONNECTOR_TYPE.TARGET as DiagramConnectorType)\r\n          : (DIAGRAM_CONNECTOR_TYPE.SOURCE as DiagramConnectorType);\r\n        const label = this.functionalNodeMap.get(x.from)?.type ?? x.type;\r\n        return new DiagramConnector(x.id, label, diagramType);\r\n      });\r\n    return connectors;\r\n  }\r\n\r\n  getConnections(\r\n    nodeId: string,\r\n    aspects: Aspects,\r\n    connectors: DiagramConnector[]\r\n  ): DiagramConnection[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    return aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          Object.values(DIAGRAM_CONNECTION_TYPE).includes(x.type)\r\n      )\r\n      .map((x) => {\r\n        const sourceParentEdge = aspects.graph.edges.filter(\r\n          (e) => e.from === \"n2\" && e.type === \"imfo:partOf\"\r\n        )[0];\r\n        const targetConnector = connectors.filter(\r\n          (x) => x.type === DIAGRAM_CONNECTOR_TYPE.TARGET\r\n        )[0];\r\n        // TODO: This values must be dynamic\r\n        return new DiagramConnection(\r\n          x.id,\r\n          x.type,\r\n          sourceParentEdge.to,\r\n          \"e2\",\r\n          \"n4\",\r\n          targetConnector.id,\r\n          x.type as DiagramConnectionType\r\n        );\r\n      });\r\n  }\r\n\r\n  guid(): string {\r\n    function _p8(s: boolean) {\r\n      var p = (Math.random().toString(16) + \"000000000\").substr(2, 8);\r\n      return s ? \"-\" + p.substr(0, 4) + \"-\" + p.substr(4, 4) : p;\r\n    }\r\n    return _p8(false) + _p8(true) + _p8(true) + _p8(false);\r\n  }\r\n\r\n  getProxyNodes(aspect: Aspects) {\r\n    if (\r\n      !aspect &&\r\n      !aspect.graph &&\r\n      !aspect.graph.edges &&\r\n      aspect.graph.edges.length <= 0\r\n    )\r\n      return;\r\n\r\n    aspect.graph.nodes\r\n      .filter(\r\n        (x) =>\r\n          !x.type.toLowerCase().includes(\"input\") &&\r\n          !x.type.toLowerCase().includes(\"output\") &&\r\n          !x.type.toLowerCase().includes(\"pipeline\")\r\n      )\r\n      .forEach((n) => {\r\n        const sourceNodeId = this.guid();\r\n        const targetNodeId = this.guid();\r\n\r\n        aspect.graph.nodes.push({\r\n          id: sourceNodeId,\r\n          type: \"imfo:SupplyOutput\",\r\n          label: \"Supply output\",\r\n        });\r\n        aspect.graph.nodes.push({\r\n          id: targetNodeId,\r\n          type: \"imfo:SupplyInput\",\r\n          label: \"Supply input\",\r\n        });\r\n\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: sourceNodeId,\r\n          to: n.id,\r\n        });\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: targetNodeId,\r\n          to: n.id,\r\n        });\r\n      });\r\n  }\r\n}\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js",[],["559","560"],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\reducers.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\inspectorReducer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\showInspectorReducer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\nodetype\\saga.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx",["561","562","563","564","565"],"import { AspectInfo, AspectDropdown } from \"./aspect\";\r\nimport { WorkspaceService } from \"../../services\";\r\nimport DnDFlow from \"./flow/dragAndDrop\";\r\nimport {\r\n  AspectDescriptor,\r\n  Aspects,\r\n  Root,\r\n  Workspace,\r\n} from \"../../models/workspace\";\r\n\r\ninterface Props extends Workspace {\r\n  aspectDescriptors: AspectDescriptor[];\r\n  root: Root;\r\n  aspects: Aspects[];\r\n}\r\n\r\nconst TreeviewBody = ({ aspectDescriptors, root, aspects }: Props) => {\r\n  const service = new WorkspaceService({ root, aspects, aspectDescriptors });\r\n  const fcat = service.getFunctionalAspectCategories();\r\n  const pcat = service.getProductAspectCategories();\r\n  const acat = service.getAreaAspectCategories();\r\n  // const fgraph = service.getNodesConnectedToRoot('1');\r\n\r\n  return (\r\n    <>\r\n      <DnDFlow />\r\n    </>\r\n\r\n    /***  ORIGINAL DROPDOWNS ***/\r\n    // <div className=\"aspects_container\">\r\n    //   {aspectDescriptors.map((aspect) => (\r\n    //     <div key={aspect.id} className=\"aspect_container\">\r\n    //       <AspectInfo id={aspect.id} name={aspect.name} />\r\n    //       <AspectDropdown\r\n    //         id={aspect.id}\r\n    //         functional={fcat}\r\n    //         product={pcat}\r\n    //         location={acat}\r\n    //       />\r\n    //       <div className=\"aspect_view\"></div>\r\n    //     </div>\r\n    //   ))}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default TreeviewBody;\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectDropdown.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\aspect\\AspectInfo.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\actions.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorHeader.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeader.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeaderWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentDataWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DrawMiniMap.tsx",["566"],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\library\\reducers\\showLibraryReducer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorModule.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\LibraryModule.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\IconWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\Header.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleInspectorButton.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleLibraryButton.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SidebarWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\IconWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\TextWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\ContentWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchBox.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\SearchIconWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facilityComponent\\FacilityComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\checkboxComponent\\CheckboxComponent.tsx",["567"],"import react, { useState } from \"react\";\r\nimport \"./checkbox.scss\";\r\ninterface CheckboxComponentProps {\r\n  id: string;\r\n  inputLabel: string;\r\n  checked?: boolean;\r\n  aspect?: string;\r\n}\r\n\r\nexport const CheckboxComponent = ({\r\n  id,\r\n  inputLabel,\r\n  checked,\r\n  aspect,\r\n}: CheckboxComponentProps) => {\r\n  const [isChecked, setChecked] = useState(false);\r\n  const handleCheckboxChange = (event) => {\r\n    setChecked(!isChecked);\r\n  };\r\n  const underlineColor =\r\n    aspect === \"function\"\r\n      ? \"function_underline\"\r\n      : aspect === \"location\"\r\n      ? \"location_underline\"\r\n      : aspect === \"product\"\r\n      ? \"product_underline\"\r\n      : null;\r\n\r\n  return (\r\n    <label className={\"checkbox \" + underlineColor}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={handleCheckboxChange}\r\n      />\r\n      <span className=\"checkmark\"></span>\r\n      <label className=\"checkbox_label\">{inputLabel}</label>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CheckboxComponent;\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\aspectComponent\\AspectComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\facetComponent\\FacetComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\explorer\\reducers\\showExplorerReducer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\buttons\\ToggleExplorerButton.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\ExplorerModule.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\LibraryContainer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\HeaderWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\BlockviewWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TreeviewWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerContainer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ContentWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\FacilityHeader.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\HeaderWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\AspectWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\localStorage\\localStorage.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentColumn.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentContainer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentInput.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentParagraph.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\InspectorTitle.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\IconWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ExplorerTitle.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\localStorage\\LocalStorage.tsx",[],["568","569"],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\CollapsedIcon.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\libraryModule\\styled\\CollapsedIcon.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TitleWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\TextWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\VisualIconWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\SwitchWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\styled\\IconsWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\helpers\\SaveViewState.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\ViewOptionWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\SwitchViewWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\styled\\FooterWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\switchviewComponent\\SwitchViewComponent.tsx",["570"],"import CombinedViewOffIcon from \"../../../../assets/icons/combinedViewOffIcon.svg\";\r\nimport SplitViewIcon from \"../../../../assets/icons/splitViewIcon.svg\";\r\nimport textResources from \"../../../../textResources\";\r\nimport { SwitchViewWrapper, ViewOptionWrapper } from \"../styled\";\r\n\r\ninterface SwitchViewComponentProps {}\r\n\r\nexport const SwitchViewComponent = ({}: SwitchViewComponentProps) => {\r\n  return (\r\n    <>\r\n      <SwitchViewWrapper>\r\n        <ViewOptionWrapper>\r\n          <img src={CombinedViewOffIcon} alt=\"view-icon\" />\r\n          <p>{textResources.Combined_view}</p>\r\n        </ViewOptionWrapper>\r\n        <ViewOptionWrapper>\r\n          <img src={SplitViewIcon} alt=\"view-icon\" />\r\n          <p>{textResources.Split_view}</p>\r\n        </ViewOptionWrapper>\r\n      </SwitchViewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwitchViewComponent;\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\flow\\dragAndDrop\\Sidebar.js",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\explorerModule\\helpers\\GetProjectData.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\flow\\dragAndDrop\\index.js",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeInspector.tsx",[],{"ruleId":"571","replacedBy":"572"},{"ruleId":"573","replacedBy":"574"},{"ruleId":"575","severity":1,"message":"576","line":6,"column":3,"nodeType":"577","messageId":"578","endLine":6,"endColumn":11},{"ruleId":"575","severity":1,"message":"579","line":20,"column":8,"nodeType":"577","messageId":"578","endLine":20,"endColumn":19},{"ruleId":"575","severity":1,"message":"580","line":6,"column":3,"nodeType":"577","messageId":"578","endLine":6,"endColumn":8},{"ruleId":"575","severity":1,"message":"581","line":8,"column":3,"nodeType":"577","messageId":"578","endLine":8,"endColumn":19},{"ruleId":"575","severity":1,"message":"582","line":21,"column":10,"nodeType":"577","messageId":"578","endLine":21,"endColumn":26},{"ruleId":"575","severity":1,"message":"583","line":22,"column":10,"nodeType":"577","messageId":"578","endLine":22,"endColumn":26},{"ruleId":"575","severity":1,"message":"584","line":23,"column":10,"nodeType":"577","messageId":"578","endLine":23,"endColumn":25},{"ruleId":"571","replacedBy":"572"},{"ruleId":"573","replacedBy":"574"},{"ruleId":"575","severity":1,"message":"585","line":1,"column":10,"nodeType":"577","messageId":"578","endLine":1,"endColumn":20},{"ruleId":"575","severity":1,"message":"586","line":1,"column":22,"nodeType":"577","messageId":"578","endLine":1,"endColumn":36},{"ruleId":"575","severity":1,"message":"587","line":19,"column":9,"nodeType":"577","messageId":"578","endLine":19,"endColumn":13},{"ruleId":"575","severity":1,"message":"588","line":20,"column":9,"nodeType":"577","messageId":"578","endLine":20,"endColumn":13},{"ruleId":"575","severity":1,"message":"589","line":21,"column":9,"nodeType":"577","messageId":"578","endLine":21,"endColumn":13},{"ruleId":"575","severity":1,"message":"590","line":20,"column":14,"nodeType":"577","messageId":"578","endLine":20,"endColumn":19},{"ruleId":"575","severity":1,"message":"591","line":1,"column":8,"nodeType":"577","messageId":"578","endLine":1,"endColumn":13},{"ruleId":"571","replacedBy":"592"},{"ruleId":"573","replacedBy":"593"},{"ruleId":"594","severity":1,"message":"595","line":8,"column":37,"nodeType":"596","messageId":"597","endLine":8,"endColumn":65},"no-native-reassign",["598"],"no-negated-in-lhs",["599"],"@typescript-eslint/no-unused-vars","'Controls' is defined but never used.","Identifier","unusedVar","'DrawMiniMap' is defined but never used.","'Graph' is defined but never used.","'AspectDescriptor' is defined but never used.","'AspectRatioSharp' is defined but never used.","'brotliDecompress' is defined but never used.","'nodetypeReducer' is defined but never used.","'AspectInfo' is defined but never used.","'AspectDropdown' is defined but never used.","'fcat' is assigned a value but never used.","'pcat' is assigned a value but never used.","'acat' is assigned a value but never used.","'color' is assigned a value but never used.","'react' is defined but never used.",["598"],["599"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]
>>>>>>> main
