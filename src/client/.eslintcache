[{"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx":"1","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts":"2","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts":"3","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts":"4","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\index.ts":"5","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts":"6","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts":"7","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts":"8","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts":"9","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts":"10","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js":"11","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js":"12","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js":"13","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts":"14","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx":"15","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx":"16","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\Footer.tsx":"17","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx":"18","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx":"19","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx":"20","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx":"21","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx":"22","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx":"23","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts":"24","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts":"25","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts":"26","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts":"27","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts":"28","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts":"29","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx":"30","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx":"31","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectDropdown.tsx":"32","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectInfo.tsx":"33","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx":"34","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx":"35","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx":"36","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx":"37","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx":"38","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx":"39","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx":"40","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx":"41","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DrawMiniMap.tsx":"42","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\hooks\\useTreeviewChangeHandler.tsx":"43","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts":"44","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts":"45","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\actions.ts":"46","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\types.ts":"47","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts":"48","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\reducers.ts":"49","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts":"50","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts":"51","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts":"52","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts":"53","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts":"54","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts":"55","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\nodetype\\saga.ts":"56","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\getAspect.tsx":"57","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\aspectReducer.tsx":"58","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts":"59","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorComponent.tsx":"60","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx":"61","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledToggleButton.tsx":"62","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx":"63","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\index.ts":"64","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts":"65","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedToggleButton.tsx":"66","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx":"67","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts":"68","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx":"69","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx":"70","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx":"71","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts":"72","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts":"73","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx":"74","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorHeader.tsx":"75","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledToggleBox.tsx":"76","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledInspectorTitle.tsx":"77","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\ToggleInspectorIcon.tsx":"78","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorToggleChangeHandler.tsx":"79","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeToggleInspector.tsx":"80","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeInspector.tsx":"81","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\inspectorReducer.tsx":"82","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\showInspectorReducer.tsx":"83","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeaderWrapper.tsx":"84","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\ToggleBox.tsx":"85","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx":"86","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledParagraph.tsx":"87","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledContainer.tsx":"88","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledColumn.tsx":"89","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledInput.tsx":"90","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeader.ts":"91","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentDataWrapper.tsx":"92"},{"size":511,"mtime":1615884814509,"results":"93","hashOfConfig":"94"},{"size":414,"mtime":1616504603339,"results":"95","hashOfConfig":"94"},{"size":58,"mtime":1615384119007,"results":"96","hashOfConfig":"94"},{"size":63,"mtime":1615384119006,"results":"97","hashOfConfig":"94"},{"size":60,"mtime":1616504603338,"results":"98","hashOfConfig":"94"},{"size":56,"mtime":1615884814467,"results":"99","hashOfConfig":"94"},{"size":131,"mtime":1615384119010,"results":"100","hashOfConfig":"94"},{"size":215,"mtime":1615884814472,"results":"101","hashOfConfig":"94"},{"size":73,"mtime":1615384119013,"results":"102","hashOfConfig":"94"},{"size":347,"mtime":1616504603351,"results":"103","hashOfConfig":"94"},{"size":7908,"mtime":1616605952006,"results":"104","hashOfConfig":"94"},{"size":330,"mtime":1615884814507,"results":"105","hashOfConfig":"94"},{"size":723,"mtime":1615884814508,"results":"106","hashOfConfig":"94"},{"size":11954,"mtime":1615884814523,"results":"107","hashOfConfig":"94"},{"size":2321,"mtime":1616531775598,"results":"108","hashOfConfig":"94"},{"size":1392,"mtime":1615884814493,"results":"109","hashOfConfig":"94"},{"size":639,"mtime":1616504603336,"results":"110","hashOfConfig":"94"},{"size":333,"mtime":1616607032091,"results":"111","hashOfConfig":"94"},{"size":3247,"mtime":1616504603333,"results":"112","hashOfConfig":"94"},{"size":476,"mtime":1615884814495,"results":"113","hashOfConfig":"94"},{"size":983,"mtime":1615884814496,"results":"114","hashOfConfig":"94"},{"size":354,"mtime":1615884814497,"results":"115","hashOfConfig":"94"},{"size":589,"mtime":1616531590347,"results":"116","hashOfConfig":"94"},{"size":24,"mtime":1615384119031,"results":"117","hashOfConfig":"94"},{"size":56,"mtime":1615884814522,"results":"118","hashOfConfig":"94"},{"size":26,"mtime":1615384119030,"results":"119","hashOfConfig":"94"},{"size":284,"mtime":1615884814511,"results":"120","hashOfConfig":"94"},{"size":2558,"mtime":1615884814510,"results":"121","hashOfConfig":"94"},{"size":210,"mtime":1615943687001,"results":"122","hashOfConfig":"94"},{"size":1235,"mtime":1616504603346,"results":"123","hashOfConfig":"94"},{"size":187,"mtime":1616075917914,"results":"124","hashOfConfig":"94"},{"size":1385,"mtime":1616504603344,"results":"125","hashOfConfig":"94"},{"size":513,"mtime":1616504603345,"results":"126","hashOfConfig":"94"},{"size":783,"mtime":1616505392686,"results":"127","hashOfConfig":"94"},{"size":572,"mtime":1616445233098,"results":"128","hashOfConfig":"94"},{"size":516,"mtime":1616445333196,"results":"129","hashOfConfig":"94"},{"size":888,"mtime":1616493014694,"results":"130","hashOfConfig":"94"},{"size":528,"mtime":1615884814474,"results":"131","hashOfConfig":"94"},{"size":646,"mtime":1616504603335,"results":"132","hashOfConfig":"94"},{"size":614,"mtime":1615884814491,"results":"133","hashOfConfig":"94"},{"size":673,"mtime":1615884814478,"results":"134","hashOfConfig":"94"},{"size":648,"mtime":1615884814471,"results":"135","hashOfConfig":"94"},{"size":365,"mtime":1615812248733,"results":"136","hashOfConfig":"94"},{"size":342,"mtime":1615884814519,"results":"137","hashOfConfig":"94"},{"size":716,"mtime":1615884814520,"results":"138","hashOfConfig":"94"},{"size":342,"mtime":1615884814516,"results":"139","hashOfConfig":"94"},{"size":752,"mtime":1615884814517,"results":"140","hashOfConfig":"94"},{"size":1195,"mtime":1616624369455,"results":"141","hashOfConfig":"94"},{"size":746,"mtime":1616504603356,"results":"142","hashOfConfig":"94"},{"size":747,"mtime":1615884814520,"results":"143","hashOfConfig":"94"},{"size":824,"mtime":1615884814518,"results":"144","hashOfConfig":"94"},{"size":578,"mtime":1615884814512,"results":"145","hashOfConfig":"94"},{"size":692,"mtime":1615884814518,"results":"146","hashOfConfig":"94"},{"size":1409,"mtime":1615884814514,"results":"147","hashOfConfig":"94"},{"size":1136,"mtime":1615884814514,"results":"148","hashOfConfig":"94"},{"size":1009,"mtime":1615884814513,"results":"149","hashOfConfig":"94"},{"size":278,"mtime":1615887694260,"results":"150","hashOfConfig":"94"},{"size":494,"mtime":1615930158637,"results":"151","hashOfConfig":"94"},{"size":136,"mtime":1616532502144,"results":"152","hashOfConfig":"94"},{"size":820,"mtime":1616625350391,"results":"153","hashOfConfig":"94"},{"size":373,"mtime":1616616477077,"results":"154","hashOfConfig":"94"},{"size":630,"mtime":1616510992966,"results":"155","hashOfConfig":"94"},{"size":621,"mtime":1616624267484,"results":"156","hashOfConfig":"94"},{"size":134,"mtime":1615990840618,"results":"157","hashOfConfig":"94"},{"size":154,"mtime":1616532538448,"results":"158","hashOfConfig":"94"},{"size":459,"mtime":1616577694910,"results":"159","hashOfConfig":"94"},{"size":413,"mtime":1615990840616,"results":"160","hashOfConfig":"94"},{"size":124,"mtime":1616625469917,"results":"161","hashOfConfig":"94"},{"size":851,"mtime":1616629816778,"results":"162","hashOfConfig":"94"},{"size":2905,"mtime":1616629774662,"results":"163","hashOfConfig":"94"},{"size":477,"mtime":1616074562583,"results":"164","hashOfConfig":"94"},{"size":179,"mtime":1616074562583,"results":"165","hashOfConfig":"94"},{"size":672,"mtime":1616628839674,"results":"166","hashOfConfig":"94"},{"size":190,"mtime":1616505458218,"results":"167","hashOfConfig":"94"},{"size":504,"mtime":1616625472785,"results":"168","hashOfConfig":"94"},{"size":254,"mtime":1616605013588,"results":"169","hashOfConfig":"94"},{"size":206,"mtime":1616577245121,"results":"170","hashOfConfig":"94"},{"size":606,"mtime":1616585472919,"results":"171","hashOfConfig":"94"},{"size":432,"mtime":1616624262336,"results":"172","hashOfConfig":"94"},{"size":241,"mtime":1616624403191,"results":"173","hashOfConfig":"94"},{"size":396,"mtime":1616624201428,"results":"174","hashOfConfig":"94"},{"size":900,"mtime":1616624191717,"results":"175","hashOfConfig":"94"},{"size":596,"mtime":1616624189669,"results":"176","hashOfConfig":"94"},{"size":329,"mtime":1616624584560,"results":"177","hashOfConfig":"94"},{"size":1012,"mtime":1616627448819,"results":"178","hashOfConfig":"94"},{"size":1323,"mtime":1616627438418,"results":"179","hashOfConfig":"94"},{"size":152,"mtime":1616626692083,"results":"180","hashOfConfig":"94"},{"size":208,"mtime":1616627445593,"results":"181","hashOfConfig":"94"},{"size":152,"mtime":1616627446638,"results":"182","hashOfConfig":"94"},{"size":234,"mtime":1616626695748,"results":"183","hashOfConfig":"94"},{"size":1055,"mtime":1616627213256,"results":"184","hashOfConfig":"94"},{"size":349,"mtime":1616628841374,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"127lrwc",{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"188"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"188"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"188"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\index.tsx",[],["377","378"],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\WorkspaceDataset.js",[],["379","380"],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\NodeTypeDataset.js",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\data\\UserDataset.js",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\workspaceService.ts",["381","382","383","384","385"],"import {\r\n  Workspace,\r\n  Node,\r\n  Edge,\r\n  Aspects,\r\n  Graph,\r\n  CategoryDescriptor,\r\n  AspectDescriptor,\r\n  Connection,\r\n} from \"../models/workspace\";\r\nimport {\r\n  Diagram,\r\n  DiagramNode,\r\n  DiagramConnector,\r\n  DiagramConnectorType,\r\n  DiagramConnectionType,\r\n  DiagramConnection,\r\n  DIAGRAM_CONNECTOR_TYPE,\r\n  DIAGRAM_CONNECTION_TYPE,\r\n} from \"./../models/diagram\";\r\nimport { AspectRatioSharp } from \"@material-ui/icons\";\r\nimport { brotliDecompress } from \"zlib\";\r\nimport { nodetypeReducer } from \"../redux/store/nodetypes/reducers\";\r\n\r\nexport class WorkspaceService {\r\n  private workspace: Workspace;\r\n  functionalNodeMap: Map<string, Node>;\r\n  productNodeMap: Map<string, Node>;\r\n  functionalEdgeMap: Map<string, Edge>;\r\n  productEdgeMap: Map<string, Edge>;\r\n\r\n  proxyNodeMap: Map<string, Node>;\r\n  proxyEdgeMap: Map<string, Edge>;\r\n\r\n  constructor(workspace: Workspace) {\r\n    this.workspace = workspace;\r\n    this.functionalNodeMap = this.createNodeMap(\"1\", \"1\");\r\n    this.productNodeMap = this.createNodeMap(\"2\", \"1\");\r\n    this.functionalEdgeMap = this.createEdgeMap(\"1\", \"1\");\r\n    this.productEdgeMap = this.createEdgeMap(\"2\", \"1\");\r\n    this.proxyNodeMap = new Map<string, Node>();\r\n    this.proxyEdgeMap = new Map<string, Edge>();\r\n  }\r\n\r\n  createNodeMap(aspect: string, category: string): Map<string, Node> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Node>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.nodes.map((obj) => [obj.id, obj] as [string, Node])\r\n    );\r\n  }\r\n\r\n  createEdgeMap(aspect: string, category: string): Map<string, Edge> {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === aspect && x.category === category\r\n    );\r\n    if (!aspects && aspects.length <= 0) return new Map<string, Edge>();\r\n\r\n    return new Map(\r\n      aspects[0].graph.edges.map((obj) => [obj.id, obj] as [string, Edge])\r\n    );\r\n  }\r\n\r\n  getProductLabel(nodeId: string): string {\r\n    var actualProductnode = this.productNodeMap.get(nodeId);\r\n    if (actualProductnode) {\r\n      return actualProductnode.label;\r\n    }\r\n\r\n    const actualNode = this.functionalNodeMap.get(nodeId);\r\n\r\n    if (!actualNode) return \"\";\r\n\r\n    // TODO: Use Typeregister\r\n    if (actualNode.type === \"imft:Reservoir\") return \"Reservoir\";\r\n  }\r\n\r\n  getRootEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        !node.type.toLowerCase().includes(\"input\") &&\r\n        !node.type.toLowerCase().includes(\"output\")\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getConnectorEdges(nodeId: string): Edge[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type === \"imfo:partOf\"\r\n    );\r\n    let filteredEdges: Edge[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      const node = this.functionalNodeMap.get(edge.from);\r\n      if (\r\n        node &&\r\n        (node.type.toLowerCase().includes(\"input\") ||\r\n          node.type.toLowerCase().includes(\"output\"))\r\n      ) {\r\n        filteredEdges.push(edge);\r\n      }\r\n    });\r\n    return filteredEdges;\r\n  }\r\n\r\n  getFunctionalAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"1\");\r\n  }\r\n\r\n  getProductAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"2\");\r\n  }\r\n\r\n  getAreaAspect(): Aspects[] {\r\n    return this.workspace.aspects.filter((x) => x.aspect === \"3\");\r\n  }\r\n\r\n  getFunctionalAspectCategories(): CategoryDescriptor[] {\r\n    let functionalCategories: CategoryDescriptor[] = [];\r\n    const fAspect = this.getFunctionalAspect();\r\n    fAspect.forEach((aspect) => {\r\n      functionalCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return functionalCategories;\r\n  }\r\n\r\n  getProductAspectCategories(): CategoryDescriptor[] {\r\n    let productCategories: CategoryDescriptor[] = [];\r\n    const pAspect = this.getProductAspect();\r\n    pAspect.forEach((aspect) => {\r\n      productCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    return productCategories;\r\n  }\r\n\r\n  getAreaAspectCategories(): CategoryDescriptor[] {\r\n    let areaCategories: CategoryDescriptor[] = [];\r\n    const aAspect = this.getAreaAspect();\r\n    aAspect.forEach((aspect) => {\r\n      areaCategories.push({\r\n        id: aspect.category,\r\n        name: aspect.descriptor.name,\r\n        description: aspect.descriptor.description,\r\n      });\r\n    });\r\n    if (!areaCategories || areaCategories.length <= 0) {\r\n      areaCategories.push({\r\n        id: null,\r\n        name: \"default\",\r\n        description: \"\",\r\n      });\r\n    }\r\n    return areaCategories;\r\n  }\r\n\r\n  // getNodesConnectedToRoot(aspectId: string): Node[] {\r\n  //     const aspectEdges: Edge[] = [];\r\n  //     const aspectNodes: Node[] = [];\r\n  //     const chosenAspect = this.workspace.aspects\r\n  // \t.filter(x => x.aspect === aspectId);\r\n\r\n  // \tchosenAspect.forEach(aspect => {\r\n  // \t\tif(aspect.graph.edges.filter(e => e.to === 'root' && e.type === 'imfo:partOf')){\r\n  // \t\t\taspectEdges.push({\r\n  // \t\t\t\tid: e.id;\r\n  // \t\t\t});\r\n  // \t\t}\r\n  // \t})\r\n\r\n  getConnectionEdges(nodeId: string): Connection[] {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return [];\r\n\r\n    const edges = aspects[0].graph.edges.filter(\r\n      (x) => x.to === nodeId && x.type !== \"imfo:partOf\"\r\n    );\r\n    let filteredConnections: Connection[] = [];\r\n\r\n    // TODO: Use Typeregister\r\n    edges.forEach((edge) => {\r\n      if (edge) {\r\n        var parent = aspects[0].graph.edges.filter(\r\n          (x) => x.from === edge.from && x.type === \"imfo:partOf\"\r\n        );\r\n\r\n        if (parent && parent.length > 0) {\r\n          filteredConnections.push({\r\n            id: edge.id,\r\n            type: edge.type,\r\n            from: parent[0].to,\r\n            to: edge.to,\r\n            connector: parent[0].id,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return filteredConnections;\r\n  }\r\n\r\n  getDiagram(nodeId: string): Diagram {\r\n    var aspects = this.workspace.aspects.filter(\r\n      (x) => x.aspect === \"1\" && x.category === \"1\"\r\n    );\r\n\r\n    if (!aspects && aspects.length <= 0) return null;\r\n\r\n    var diagram = new Diagram(\r\n      nodeId,\r\n      this.productNodeMap.get(nodeId)?.label ??\r\n        this.functionalNodeMap.get(nodeId)?.label ??\r\n        this.workspace.root.title\r\n    );\r\n    const nodeEdges = aspects[0].graph.edges.filter(\r\n      (x) =>\r\n        x.to === nodeId &&\r\n        x.type === \"imfo:partOf\" &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\") &&\r\n        !this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"output\")\r\n    );\r\n\r\n    diagram.nodes = nodeEdges.map((x) => {\r\n      const node = this.functionalNodeMap.get(x.from);\r\n      const label = this.productNodeMap.get(node.id)?.label ?? node.type;\r\n      const diagramNode = new DiagramNode(node.id, label);\r\n      diagramNode.connectors = this.getConnectors(node.id, aspects[0]);\r\n\r\n      diagram.connections = diagram.connections.concat(\r\n        this.getConnections(node.id, aspects[0], diagramNode.connectors)\r\n      );\r\n\r\n      return diagramNode;\r\n    });\r\n    return diagram;\r\n  }\r\n\r\n  getConnectors(nodeId: string, aspects: Aspects): DiagramConnector[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    const connectors = aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          x.type === \"imfo:partOf\" &&\r\n          (this.functionalNodeMap\r\n            .get(x.from)\r\n            .type.toLowerCase()\r\n            .includes(\"input\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"output\") ||\r\n            this.functionalNodeMap\r\n              .get(x.from)\r\n              .type.toLowerCase()\r\n              .includes(\"supply\"))\r\n      )\r\n      .map((x) => {\r\n        const diagramType = this.functionalNodeMap\r\n          .get(x.from)\r\n          .type.toLowerCase()\r\n          .includes(\"input\")\r\n          ? (DIAGRAM_CONNECTOR_TYPE.TARGET as DiagramConnectorType)\r\n          : (DIAGRAM_CONNECTOR_TYPE.SOURCE as DiagramConnectorType);\r\n        const label = this.functionalNodeMap.get(x.from)?.type ?? x.type;\r\n        return new DiagramConnector(x.id, label, diagramType);\r\n      });\r\n    return connectors;\r\n  }\r\n\r\n  getConnections(\r\n    nodeId: string,\r\n    aspects: Aspects,\r\n    connectors: DiagramConnector[]\r\n  ): DiagramConnection[] {\r\n    if (\r\n      !aspects &&\r\n      !aspects.graph &&\r\n      !aspects.graph.edges &&\r\n      aspects.graph.edges.length <= 0\r\n    )\r\n      return [];\r\n\r\n    return aspects.graph.edges\r\n      .filter(\r\n        (x) =>\r\n          x.to === nodeId &&\r\n          Object.values(DIAGRAM_CONNECTION_TYPE).includes(x.type)\r\n      )\r\n      .map((x) => {\r\n        const sourceParentEdge = aspects.graph.edges.filter(\r\n          (e) => e.from === \"n2\" && e.type === \"imfo:partOf\"\r\n        )[0];\r\n        const targetConnector = connectors.filter(\r\n          (x) => x.type === DIAGRAM_CONNECTOR_TYPE.TARGET\r\n        )[0];\r\n        // TODO: This values must be dynamic\r\n        return new DiagramConnection(\r\n          x.id,\r\n          x.type,\r\n          sourceParentEdge.to,\r\n          \"e2\",\r\n          \"n4\",\r\n          targetConnector.id,\r\n          x.type as DiagramConnectionType\r\n        );\r\n      });\r\n  }\r\n\r\n  guid(): string {\r\n    function _p8(s: boolean) {\r\n      var p = (Math.random().toString(16) + \"000000000\").substr(2, 8);\r\n      return s ? \"-\" + p.substr(0, 4) + \"-\" + p.substr(4, 4) : p;\r\n    }\r\n    return _p8(false) + _p8(true) + _p8(true) + _p8(false);\r\n  }\r\n\r\n  getProxyNodes(aspect: Aspects) {\r\n    if (\r\n      !aspect &&\r\n      !aspect.graph &&\r\n      !aspect.graph.edges &&\r\n      aspect.graph.edges.length <= 0\r\n    )\r\n      return;\r\n\r\n    aspect.graph.nodes\r\n      .filter(\r\n        (x) =>\r\n          !x.type.toLowerCase().includes(\"input\") &&\r\n          !x.type.toLowerCase().includes(\"output\") &&\r\n          !x.type.toLowerCase().includes(\"pipeline\")\r\n      )\r\n      .forEach((n) => {\r\n        const sourceNodeId = this.guid();\r\n        const targetNodeId = this.guid();\r\n\r\n        aspect.graph.nodes.push({\r\n          id: sourceNodeId,\r\n          type: \"imfo:SupplyOutput\",\r\n          label: \"Supply output\",\r\n        });\r\n        aspect.graph.nodes.push({\r\n          id: targetNodeId,\r\n          type: \"imfo:SupplyInput\",\r\n          label: \"Supply input\",\r\n        });\r\n\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: sourceNodeId,\r\n          to: n.id,\r\n        });\r\n        aspect.graph.edges.push({\r\n          id: this.guid(),\r\n          type: \"imfo:partOf\",\r\n          from: targetNodeId,\r\n          to: n.id,\r\n        });\r\n      });\r\n  }\r\n}\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\home\\Home.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\header\\Header.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\footer\\Footer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\app\\App.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\nodetypes\\NodeTypeOverview.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\toolbox\\ToolboxComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\services\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\user\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\models\\diagram\\Diagram.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\assets\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewBody.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewHeader.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectDropdown.tsx",["386"],"import { CategoryDescriptor } from \"../../models/workspace\";\r\nimport \"react-dropdown/style.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getAspect } from \"../../redux/testing/getAspect\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  functional: CategoryDescriptor[];\r\n  product: CategoryDescriptor[];\r\n  location: CategoryDescriptor[];\r\n}\r\n\r\nconst AspectDropdown = ({ id, functional, product, location }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(getAspect());\r\n  };\r\n\r\n  return (\r\n    <div className=\"aspect_category\">\r\n      <select onChange={handleChange} className=\"select_category\">\r\n        {id === \"1\"\r\n          ? functional.map((category) => (\r\n              <option key={category.id} value={category.name}>\r\n                {category.name}\r\n              </option>\r\n            ))\r\n          : id === \"2\"\r\n          ? product.map((category) => (\r\n              <option key={category.id} value={category.name}>\r\n                {category.name}\r\n              </option>\r\n            ))\r\n          : id === \"3\"\r\n          ? location.map((category) => (\r\n              <option key={category.id} value={category.name}>\r\n                {category.name}\r\n              </option>\r\n            ))\r\n          : null}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AspectDropdown;\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\TreeviewAspectInfo.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\textResources.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddNodes.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DiagramAddConnections.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\DefaultSelectorNode.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\ConnectSelectorNode.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\InputConnect.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\defaultSelectors\\OutputConnect.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\selectorNodes\\connectSelectors\\DataConnect.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\diagram\\DrawMiniMap.tsx",["387"],"import { MiniMap, Node } from \"react-flow-renderer\";\r\n\r\nconst DrawMiniMap = () => {\r\n  let color: string;\r\n\r\n  return (\r\n    <MiniMap\r\n      nodeStrokeColor={(node: Node): string => {\r\n        return node.type === \"input\"\r\n          ? (color = \"#00041d0\")\r\n          : node.type === \"selectorNode\"\r\n          ? (color = \"#ccc\")\r\n          : node.type === \"output\"\r\n          ? (color = \"#ff0072\")\r\n          : (color = \"#eee\");\r\n      }}\r\n      nodeColor={(node: Node): string => {\r\n        return node.type === \"selectorNode\"\r\n          ? (color = \"#ccc\")\r\n          : (color = \"#fff\");\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DrawMiniMap;\r\n","C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\treeview\\hooks\\useTreeviewChangeHandler.tsx",["388","389","390"],"import { useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store/index\";\r\n\r\nconst useTreeviewChangeHandler = () => {\r\n  // const aspectList = useSelector<RootState>((state) => state.workspace);\r\n\r\n  const test = \"one\";\r\n  console.log(test);\r\n  return test;\r\n};\r\n\r\nexport default useTreeviewChangeHandler;\r\n",["391","392"],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\actions.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\actions.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\nodetypes\\reducers.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\workspace\\reducers.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\reducers.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\store\\user\\types.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\workspace\\saga.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\user\\saga.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\sagas\\nodetype\\saga.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\getAspect.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\testing\\aspectReducer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledInspectorComponent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\StyledToggleButton.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorChangeHandler.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedToggleButton.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\styled\\animated\\AnimatedMenu.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentData.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetContentData.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetTextResource.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\index.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\helpers\\GetColor.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\InspectorHeader.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledToggleBox.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledInspectorTitle.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\ToggleInspectorIcon.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\hooks\\useInspectorToggleChangeHandler.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeToggleInspector.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\actions\\changeInspector.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\inspectorReducer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\redux\\inspector\\reducers\\showInspectorReducer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeaderWrapper.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\ToggleBox.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\FragmentContent.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledParagraph.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledContainer.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledColumn.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\StyledInput.tsx",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentHeader.ts",[],"C:\\Users\\helge.landro\\Equinor\\ti-spine-modelbuilder\\src\\client\\src\\components\\modules\\inspectorModule\\fragments\\styled\\FragmentDataWrapper.tsx",[],{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","severity":1,"message":"398","line":6,"column":3,"nodeType":"399","messageId":"400","endLine":6,"endColumn":8},{"ruleId":"397","severity":1,"message":"401","line":8,"column":3,"nodeType":"399","messageId":"400","endLine":8,"endColumn":19},{"ruleId":"397","severity":1,"message":"402","line":21,"column":10,"nodeType":"399","messageId":"400","endLine":21,"endColumn":26},{"ruleId":"397","severity":1,"message":"403","line":22,"column":10,"nodeType":"399","messageId":"400","endLine":22,"endColumn":26},{"ruleId":"397","severity":1,"message":"404","line":23,"column":10,"nodeType":"399","messageId":"400","endLine":23,"endColumn":25},{"ruleId":"397","severity":1,"message":"405","line":16,"column":11,"nodeType":"399","messageId":"400","endLine":16,"endColumn":16},{"ruleId":"397","severity":1,"message":"406","line":20,"column":14,"nodeType":"399","messageId":"400","endLine":20,"endColumn":19},{"ruleId":"397","severity":1,"message":"407","line":1,"column":10,"nodeType":"399","messageId":"400","endLine":1,"endColumn":21},{"ruleId":"397","severity":1,"message":"408","line":2,"column":10,"nodeType":"399","messageId":"400","endLine":2,"endColumn":21},{"ruleId":"397","severity":1,"message":"409","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":19},{"ruleId":"393","replacedBy":"410"},{"ruleId":"395","replacedBy":"411"},"no-native-reassign",["412"],"no-negated-in-lhs",["413"],"@typescript-eslint/no-unused-vars","'Graph' is defined but never used.","Identifier","unusedVar","'AspectDescriptor' is defined but never used.","'AspectRatioSharp' is defined but never used.","'brotliDecompress' is defined but never used.","'nodetypeReducer' is defined but never used.","'value' is assigned a value but never used.","'color' is assigned a value but never used.","'useCallback' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.",["412"],["413"],"no-global-assign","no-unsafe-negation"]