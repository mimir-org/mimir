name: CI - PROD

on:
  push:
    branches:
      - prod

jobs:
  create-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          use_github_release_notes: true
          bump_version_scheme: minor
          tag_prefix: "v"

      - name: Check Output Parameters
        run: |
          echo "Created tag ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"
          
  # Build and deploy the Mimir Client
  build-client:
    runs-on: ubuntu-latest
    needs: create-release
    defaults:
      run:
        working-directory: ./src/client

    steps:
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_SERVER_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}          
      - run: |
          docker build . -t ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-client:latest --build-arg ENVIR=production
          docker push ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-client:latest
          docker build . -t ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-client:${{ needs.create-release.steps.release.outputs.tag_name }} --build-arg ENVIR=production
          docker push ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-client:${{ needs.create-release.steps.release.outputs.tag_name }}          
    
  # Build the server
  build-server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: create-release
    defaults:
      run:
        working-directory: ./src/service

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_SERVER_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}          
      - run: |
          docker build . -t ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-service:latest
          docker push ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-service:latest
          docker build . -t ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-service:${{ needs.create-release.steps.release.outputs.tag_name }}
          docker push ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-service:${{ needs.create-release.steps.release.outputs.tag_name }}
          
