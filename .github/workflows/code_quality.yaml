name: Code Quality

# Contains jobs related to code quality checks.
# code-quality-client: Runs code quality related checks related to the client.
#   Does not actually build the client, as this is done via docker image on merge.
#   If the build fails,

on:
  pull_request:

  push:

  workflow_dispatch:

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      client-changed: ${{ steps.changes.outputs.client }}
      server-changed: ${{ steps.changes.outputs.server }}
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: .github/change-filters.yaml

  ######### CLIENT ###########

  code-quality-client-build:
    needs: [check-for-changes]
    if: ${{ needs.check-for-changes.outputs.client-changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/client

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 13
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        working-directory: src/client
        run: npm ci

      - name: Build
        run: npm run build

  code-quality-client-test:
    needs: [check-for-changes]
    if: ${{ needs.check-for-changes.outputs.client-changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/client

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 13
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        working-directory: src/client
        run: npm ci

      - name: Test
        run: npm test

  code-quality-client-lint:
    needs: [check-for-changes]
    if: ${{ needs.check-for-changes.outputs.client-changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/client

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 13
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        working-directory: src/client
        run: npm ci

      - name: Lint
        working-directory: src/client
        run: npm run lint

  code-quality-client-format:
    needs: [check-for-changes]
    if: ${{ needs.check-for-changes.outputs.client-changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/client

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 13
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        working-directory: src/client
        run: npm ci

      - name: Format
        working-directory: src/client
        run: npm run format:check

  ######### SERVER ###########

  code-quality-server-format:
    needs: [check-for-changes]
    if: ${{ needs.check-for-changes.outputs.server-changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/service

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Format
        run: dotnet format . --verify-no-changes --verbosity diagnostic
