name: CI - PROD

on:
  push:
    branches: [main]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mimir-org/mimir-actions/generate-release-tag-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prefix: "v"

      - name: Release
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: Release  ${{ steps.tag_version.outputs.new_tag }}
          generate_release_notes: true

      - name: Check Output Parameters
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        run: |
          echo "Tag: ${{ steps.release.outputs.new_tag }}"
          echo "Version: ${{ steps.release.outputs.new_version }}"

  build-client-release:
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    needs: create-release
    if: ${{needs.create-release.outputs.tag!=''}}
    with:
      repository: mimir-client
      tags: |
        latest
        ${{needs.create-release.outputs.tag}}
      context: ./src/client
      file: ./src/client/Dockerfile
      target: final
      build_args: |
        ENVIR=prod
      hash_files_template: "**/package-lock.json"
      push: true
      use_dockerhub: true
    secrets:
      REGISTRY_SERVER_URLS: ${{ secrets.REGISTRY_SERVER_URL }}
      REGISTRY_USERNAMES: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORDS: ${{ secrets.REGISTRY_PASSWORD }}
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}

  build-server-release:
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    needs: create-release
    if: ${{needs.create-release.outputs.tag!=''}}
    with:
      repository: mimir-server
      tags: |
        latest
        ${{needs.create-release.outputs.tag}}
      context: ./src/service
      file: ./src/service/Dockerfile
      target: final
      hash_files_template: "**/*.csproj"
      push: true
    secrets:
      REGISTRY_SERVER_URLS: ${{ secrets.REGISTRY_SERVER_URL }}
      REGISTRY_USERNAMES: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORDS: ${{ secrets.REGISTRY_PASSWORD }}
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
