name: CD - PROD

on:
  push:
    branches: [main]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.tag_version.outputs.new_tag }}
      tag: v${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mimir-org/mimir-actions/generate-release-tag-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.tag_version.outputs.new_tag }}
          name: Release v${{ steps.tag_version.outputs.new_tag }}
          generate_release_notes: true

      - name: Check Output Parameters
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        run: |
          echo "Tag: ${{ steps.release.outputs.new_tag }}"
          echo "Version: ${{ steps.release.outputs.new_version }}"

  build-client-release:
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    needs: create-release
    if: ${{needs.create-release.outputs.tag!=''}}
    with:
      repository: mimir-client
      tags: |
        latest
        ${{needs.create-release.outputs.tag}}
      context: ./src/client
      file: ./src/client/Dockerfile
      target: final
      build_args: |
        MIMIR_VERSION=${{ needs.create-release.outputs.release_version }}
      hash_files_template: "**/package-lock.json"
      push: true
      use_dockerhub: true
    secrets:
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}

  build-server-release:
    uses: mimir-org/mimir-actions/.github/workflows/docker-build-push-cached.yaml@main
    needs: create-release
    if: ${{needs.create-release.outputs.tag!=''}}
    with:
      repository: mimir-server
      tags: |
        latest
        ${{needs.create-release.outputs.tag}}
      context: ./src/service
      file: ./src/service/Dockerfile
      target: final
      hash_files_template: "**/*.csproj"
      push: true
      use_dockerhub: true
    secrets:
      DOCKERHUB_ORG: mimirorg
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}

  npm-modelbuilder:
    runs-on: ubuntu-latest
    needs: create-release
    if: ${{needs.create-release.outputs.tag!=''}}
    steps:
      - uses: actions/checkout@v2

      - name: Package typescript interfaces
        run: dotnet run
        working-directory: src/service/Mimirorg.Package

      - name: Generate npm package
        run: |

          mkdir modelbuilder-types

          cd modelbuilder-types

          cp -a ../src/service/Mimirorg.Package/template/. ./

          npx tsc index.ts --declaration

          npm version ${{ needs.create-release.outputs.raw_tag }}

      - name: Publish npm package
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish --access public --ignore-scripts
        working-directory: modelbuilder-types
        env:
          NPM_TOKEN: ${{ secrets.NPM_MIMIRORG_AUTH }}
