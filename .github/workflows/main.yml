# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REACT_APP_ENV: Development
  REACT_APP_API_BASE_URL: https://dev-spine-modelbuilder-service.azurewebsites.net/
  REACT_APP_APP_ID: 2967244a-662f-4462-82bd-7f9bca0a3683
  REACT_APP_TENANT_ID: 3aa4a235-b6e2-48d5-9195-7fcf05b459b0
  REACT_APP_REDIRECT_URI: https://dev-spine-modelbuilder.azurewebsites.net
  REACT_APP_REDIRECT_LOGOUT_URI: https://dev-spine-modelbuilder.azurewebsites.net

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-client:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/client

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_SERVER_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}          
      - run: |
          docker build . -t ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-client:dev
          docker push ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-client:dev
    
  # This workflow contains a single job called "build"
  build-server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/service

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_SERVER_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}          
      - run: |
          docker build . -t ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-service:dev
          docker push ${{ secrets.REGISTRY_SERVER_URL }}/modelbuilder-service:dev
          
